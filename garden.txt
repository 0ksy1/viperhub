local Players = game:GetService("Players")
local TweenService = game:GetService("TweenService")
local RunService = game:GetService("RunService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")

local UNIT_NAME = "unit_buff_corn"
local UNIT_COST = 3000
local RADIUS = 10
local UNIT_COUNT = 5
local UPGRADE_COSTS = {5050, 6000, 9000, 25000}

local player = game.Players.LocalPlayer
local gui = player:WaitForChild("PlayerGui")
local guiCash = gui.GameGui.Screen.Bottom.Cash
local screenMiddle = gui.GameGui.Screen.Middle
local titleLabel = gui.GameGuiNoInset.Screen.Top.GameInfo.Content.Waves.Title
local entities = workspace:WaitForChild("Map"):WaitForChild("Entities")

local placeUnit = game.ReplicatedStorage.RemoteFunctions.PlaceUnit
local upgradeUnit = game.ReplicatedStorage.RemoteFunctions.UpgradeUnit
local restartGame = game.ReplicatedStorage.RemoteFunctions.RestartGame
local voteDifficulty = game.ReplicatedStorage.RemoteFunctions.PlaceDifficultyVote
local skipWave = game.ReplicatedStorage.RemoteFunctions.SkipWave


local gui = Instance.new("ScreenGui", player:WaitForChild("PlayerGui"))
gui.Name = "ViperHub"
gui.ResetOnSpawn = false

local frame = Instance.new("Frame")
frame.Size = UDim2.new(0, 600, 0, 350)
frame.Position = UDim2.new(0.5, -300, 0.5, -175)
frame.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
frame.BorderSizePixel = 0
frame.Active = true
frame.Draggable = true
frame.Parent = gui
Instance.new("UICorner", frame).CornerRadius = UDim.new(0, 12)

local navbar = Instance.new("Frame")
navbar.Size = UDim2.new(1, 0, 0, 40)
navbar.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
navbar.BorderSizePixel = 0
navbar.Parent = frame
Instance.new("UICorner", navbar).CornerRadius = UDim.new(0, 12)

local title = Instance.new("TextLabel")
title.Size = UDim2.new(1, -100, 1, 0)
title.Position = UDim2.new(0, 12, 0, 0)
title.BackgroundTransparency = 1
title.Font = Enum.Font.GothamBold
title.TextSize = 20
title.TextColor3 = Color3.fromRGB(230, 230, 230)
title.TextXAlignment = Enum.TextXAlignment.Left
title.Text = "ViperHub"
title.Parent = navbar

local closeBtn = Instance.new("TextButton")
closeBtn.Size = UDim2.new(0, 40, 1, 0)
closeBtn.Position = UDim2.new(1, -40, 0, 0)
closeBtn.BackgroundTransparency = 1
closeBtn.Font = Enum.Font.GothamBold
closeBtn.TextSize = 20
closeBtn.TextColor3 = Color3.fromRGB(200, 50, 50)
closeBtn.Text = "X"
closeBtn.Parent = navbar
closeBtn.MouseButton1Click:Connect(function()
	gui:Destroy()
end)

local minBtn = Instance.new("TextButton")
minBtn.Size = UDim2.new(0, 40, 1, 0)
minBtn.Position = UDim2.new(1, -80, 0, 0)
minBtn.BackgroundTransparency = 1
minBtn.Font = Enum.Font.GothamBold
minBtn.TextSize = 20
minBtn.TextColor3 = Color3.fromRGB(200, 200, 200)
minBtn.Text = "_"
minBtn.Parent = navbar

local contentWrapper = Instance.new("Frame")
contentWrapper.Size = UDim2.new(1, 0, 1, -40)
contentWrapper.Position = UDim2.new(0, 0, 0, 40)
contentWrapper.BackgroundTransparency = 1
contentWrapper.Parent = frame

local tabsPanel = Instance.new("Frame")
tabsPanel.Size = UDim2.new(0, 130, 1, 0)
tabsPanel.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
tabsPanel.BorderSizePixel = 0
tabsPanel.Parent = contentWrapper

local tabsLayout = Instance.new("UIListLayout", tabsPanel)
tabsLayout.Padding = UDim.new(0, 4)
tabsLayout.FillDirection = Enum.FillDirection.Vertical
tabsLayout.SortOrder = Enum.SortOrder.LayoutOrder

local contentArea = Instance.new("Frame")
contentArea.Size = UDim2.new(1, -130, 1, 0)
contentArea.Position = UDim2.new(0, 130, 0, 0)
contentArea.BackgroundColor3 = Color3.fromRGB(20, 20, 20)
contentArea.BorderSizePixel = 0
contentArea.Parent = contentWrapper
Instance.new("UICorner", contentArea).CornerRadius = UDim.new(0, 10)

local pages = {}
local function createPage(name)
	local page = Instance.new("Frame")
	page.Size = UDim2.new(1, 0, 1, 0)
	page.BackgroundTransparency = 1
	page.Visible = false
	page.Parent = contentArea
	page.Name = name
	pages[name] = page
end
local function createTabButton(name)
	local btn = Instance.new("TextButton")
	btn.Size = UDim2.new(1, -8, 0, 32)
	btn.Position = UDim2.new(0, 4, 0, 0)
	btn.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
	btn.Font = Enum.Font.GothamBold
	btn.TextSize = 14
	btn.TextColor3 = Color3.fromRGB(230, 230, 230)
	btn.Text = name
	btn.Parent = tabsPanel
	Instance.new("UICorner", btn).CornerRadius = UDim.new(0, 6)
	btn.MouseButton1Click:Connect(function()
		for _, p in pairs(pages) do p.Visible = false end
		pages[name].Visible = true
		for _, b in pairs(tabsPanel:GetChildren()) do
			if b:IsA("TextButton") then
				b.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
			end
		end
		btn.BackgroundColor3 = Color3.fromRGB(70, 70, 70)
	end)
end

local tabNames = {"Main", "Utilities", "Logs", "Settings", "About"} 
for _, name in ipairs(tabNames) do
	createTabButton(name)
	createPage(name)
end
pages["Main"].Visible = true
tabsPanel:FindFirstChildOfClass("TextButton").BackgroundColor3 = Color3.fromRGB(70, 70, 70)

local minimized = false
local fullSize = frame.Size
local minimizedSize = UDim2.new(0, 600, 0, 40)
minBtn.MouseButton1Click:Connect(function()
	minimized = not minimized
	if minimized then
		contentWrapper.Visible = false
		TweenService:Create(frame, TweenInfo.new(0.25), {Size = minimizedSize}):Play()
	else
		TweenService:Create(frame, TweenInfo.new(0.25), {Size = fullSize}):Play()
		task.delay(0.2, function() contentWrapper.Visible = true end)
	end
end)

-- === RGB —ç—Ñ—Ñ–µ–∫—Ç ===
local function rgbColor()
	local t = tick() * 0.5
	return Color3.fromHSV((t % 1), 1, 1)
end


local stroke = Instance.new("UIStroke")
stroke.Thickness = 5
stroke.Parent = frame

RunService.RenderStepped:Connect(function()
	stroke.Color = Color3.fromHSV((tick() * 0.5) % 1, 1, 1)
end)


-- === Main Page —ç–ª–µ–º–µ–Ω—Ç—ã ===
local mainPage = pages["Main"]
local logFrame = Instance.new("Frame", mainPage)
logFrame.Size = UDim2.new(1, -20, 0, 200)
logFrame.Position = UDim2.new(0, 10, 0, 10)
logFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
Instance.new("UICorner", logFrame).CornerRadius = UDim.new(0, 8)

local logScroll = Instance.new("ScrollingFrame", logFrame)
logScroll.Size = UDim2.new(1, -10, 1, -10)
logScroll.Position = UDim2.new(0, 5, 0, 5)
logScroll.BackgroundTransparency = 1
logScroll.ScrollBarThickness = 4

local logLayout = Instance.new("UIListLayout", logScroll)
logLayout.Padding = UDim.new(0, 4)
logLayout.SortOrder = Enum.SortOrder.LayoutOrder

local function addLog(text)
    local label = Instance.new("TextLabel")
    label.Size = UDim2.new(1, -10, 0, 20)
    label.BackgroundTransparency = 1
    label.Font = Enum.Font.Gotham
    label.TextSize = 14
    label.TextXAlignment = Enum.TextXAlignment.Left
    label.TextColor3 = Color3.fromRGB(220, 220, 220)
    label.Text = os.date("[%H:%M:%S] ") .. text
    label.Parent = logScroll
    logScroll.CanvasSize = UDim2.new(0, 0, 0, logLayout.AbsoluteContentSize.Y)
end

addLog("UI –∑–∞–≥—Ä—É–∂–µ–Ω, –≥–æ—Ç–æ–≤ –∫ –∑–∞–ø—É—Å–∫—É.")

local modeLabel = Instance.new("TextLabel", mainPage)
modeLabel.Size = UDim2.new(1, -20, 0, 30)
modeLabel.Position = UDim2.new(0, 10, 0, 220)
modeLabel.BackgroundTransparency = 1
modeLabel.Font = Enum.Font.GothamBold
modeLabel.TextSize = 18
modeLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
modeLabel.TextXAlignment = Enum.TextXAlignment.Left
modeLabel.Text = "Selected mode: Survival Impossible"

local startBtn = Instance.new("TextButton", mainPage)
startBtn.Size = UDim2.new(0, 150, 0, 35)
startBtn.Position = UDim2.new(0, 10, 0, 260)
startBtn.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
startBtn.Font = Enum.Font.GothamBold
startBtn.TextSize = 16
startBtn.TextColor3 = Color3.fromRGB(255, 255, 255)
startBtn.Text = "START"
Instance.new("UICorner", startBtn).CornerRadius = UDim.new(0, 6)

-- === –õ–æ–≥–∏–∫–∞ –∫–Ω–æ–ø–∫–∏ START ===
local farming = false
local farmThread

startBtn.MouseButton1Click:Connect(function()
    if farming then
        farming = false
        addLog("‚õî –¶–∏–∫–ª –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –≤—Ä—É—á–Ω—É—é.")
        startBtn.Text = "START"
        return
    end

    farming = true
    startBtn.Text = "STOP"
    addLog("üöÄ –¶–∏–∫–ª —Ñ–∞—Ä–º–∞ –∑–∞–ø—É—â–µ–Ω.")

    farmThread = task.spawn(function()
        -- === –ù–ê–°–¢–†–û–ô–ö–ò ===
        local unitProgress = {}
        local placedUnits = 0
        local currentLevel = nil

        -- –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å
        local function getCash()
            local txt = guiCash.Text:gsub("%D", "")
            return tonumber(txt) or 0
        end

        -- –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –º–æ–∏—Ö —é–Ω–∏—Ç–æ–≤
        local function getMyUnits()
            local list = {}
            for _, obj in ipairs(entities:GetChildren()) do
                if obj.Name == UNIT_NAME then
                    table.insert(list, obj)
                end
            end
            return list
        end

        -- –ü–æ–ª—É—á–∏—Ç—å ID —é–Ω–∏—Ç–∞
        local function getUnitId(unit)
            local id = unit:GetAttribute("ID")
            if id then
                return tonumber(id)
            end
            return nil
        end

        -- –ü–æ—Å—Ç–∞–≤–∏—Ç—å —é–Ω–∏—Ç –ø–æ –∫—Ä—É–≥—É
        local function placeUnitAtIndex(index)
            local angle = (index / UNIT_COUNT) * math.pi * 2
            local x = math.cos(angle) * RADIUS
            local z = math.sin(angle) * RADIUS
            local args = {
                UNIT_NAME,
                {
                    Valid = true,
                    Rotation = 180,
                    CF = CFrame.new(x, 0, z, -1, 0, 0, 0, 1, 0, 0, 0, -1),
                    Position = Vector3.new(x, 0, z)
                }
            }
            local success, err = pcall(function()
                placeUnit:InvokeServer(unpack(args))
            end)
            if success then
                placedUnits += 1
                addLog(("ü™ñ –ü–æ—Å—Ç–∞–≤–ª–µ–Ω —é–Ω–∏—Ç #%d"):format(placedUnits))
            else
                addLog("‚ö†Ô∏è –û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ —é–Ω–∏—Ç–∞: " .. tostring(err))
            end
        end

        -- –¶–∏–∫–ª —É–ª—É—á—à–µ–Ω–∏–π
        local function tryUpgradeUnits()
            local units = getMyUnits()
            for _, unit in ipairs(units) do
                local uid = getUnitId(unit)
                if uid then
                    if not unitProgress[uid] then
                        unitProgress[uid] = 0
                    end
                    local level = unitProgress[uid]
                    if level < #UPGRADE_COSTS then
                        local cost = UPGRADE_COSTS[level + 1]
                        if getCash() >= cost then
                            local success, err = pcall(function()
                                upgradeUnit:InvokeServer(uid)
                            end)
                            if success then
                                unitProgress[uid] = level + 1
                                addLog(("‚¨ÜÔ∏è –Æ–Ω–∏—Ç %d —É–ª—É—á—à–µ–Ω –¥–æ —É—Ä–æ–≤–Ω—è %d (üí∞ %d)"):format(uid, unitProgress[uid], cost))
                                task.wait(0.5)
                            else
                                addLog("‚ö†Ô∏è –û—à–∏–±–∫–∞ —É–ª—É—á—à–µ–Ω–∏—è —é–Ω–∏—Ç–∞ " .. tostring(uid) .. ": " .. tostring(err))
                            end
                        end
                    end
                end
                task.wait(0.1)
            end
        end

        -- –ê–≤—Ç–æ-—Å–∫–∏–ø –≤–æ–ª–Ω
        local function autoSkip()
            pcall(function()
                skipWave:InvokeServer({"y"})
            end)
        end

        -- –°–±—Ä–æ—Å —Ü–∏–∫–ª–∞ —Ñ–∞—Ä–º–∞
        local function resetCycle()
            placedUnits = 0
            unitProgress = {}
            addLog("üîÑ –ù–æ–≤—ã–π —Ü–∏–∫–ª —Ñ–∞—Ä–º–∞.")
        end

        -- –ü–æ–ª—É—á–µ–Ω–∏–µ —É—Ä–æ–≤–Ω—è –∏–∑ —Ç–µ–∫—Å—Ç–∞
        local function getLevelFromTitle()
            local text = titleLabel.Text or ""
            local level = text:match("Level%s+(%d+)")
            return tonumber(level)
        end

        -- –ì–ª–∞–≤–Ω—ã–π —Ü–∏–∫–ª
        while farming do
            local lvl = getLevelFromTitle()
            if lvl and lvl ~= currentLevel then
                currentLevel = lvl
                resetCycle()
            end

            -- –ì–æ–ª–æ—Å–æ–≤–∞–Ω–∏–µ
            if screenMiddle:FindFirstChild("DifficultyVote") and screenMiddle.DifficultyVote.Visible then
                local args = { "dif_impossible" }
                voteDifficulty:InvokeServer(unpack(args))
                addLog("üó≥Ô∏è –ü—Ä–æ–≥–æ–ª–æ—Å–æ–≤–∞–ª –∑–∞ dif_impossible.")
                task.wait(1)
                continue
            end


            -- –ö–æ–Ω–µ—Ü –∏–≥—Ä—ã
            if screenMiddle:FindFirstChild("GameEnd") and screenMiddle.GameEnd.Visible then
                restartGame:InvokeServer()
                addLog("üîÅ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ –∏–≥—Ä—ã.")
                resetCycle()
                task.wait(2)
                continue
            end

            -- –ê–≤—Ç–æ—Å–∫–∏–ø
            autoSkip()

            -- –ü–æ—Å—Ç–∞–Ω–æ–≤–∫–∞ —é–Ω–∏—Ç–æ–≤
            if placedUnits < UNIT_COUNT then
                if getCash() >= UNIT_COST then
                    placeUnitAtIndex(placedUnits)
                    task.wait(0.5)
                end
            else
                tryUpgradeUnits()
            end

            task.wait(1)
        end
    end)
end)

-- –í–∫–ª–∞–¥–∫–∞ Utilities
local utilitiesPage = pages["Utilities"]

local utilitiesScroll = Instance.new("ScrollingFrame", utilitiesPage)
utilitiesScroll.Size = UDim2.new(1, -20, 1, -20)
utilitiesScroll.Position = UDim2.new(0, 10, 0, 10)
utilitiesScroll.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
utilitiesScroll.BorderSizePixel = 0
utilitiesScroll.ScrollBarThickness = 6
Instance.new("UICorner", utilitiesScroll).CornerRadius = UDim.new(0, 8)

local utilitiesLayout = Instance.new("UIListLayout", utilitiesScroll)
utilitiesLayout.Padding = UDim.new(0, 8)
utilitiesLayout.SortOrder = Enum.SortOrder.LayoutOrder

-- –ö–Ω–æ–ø–∫–∞ Inf Yield
local infYieldBtn = Instance.new("TextButton", utilitiesScroll)
infYieldBtn.Size = UDim2.new(1, -20, 0, 40)
infYieldBtn.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
infYieldBtn.Font = Enum.Font.GothamBold
infYieldBtn.TextSize = 18
infYieldBtn.TextColor3 = Color3.fromRGB(230, 230, 230)
infYieldBtn.Text = "Inf Yield"
Instance.new("UICorner", infYieldBtn).CornerRadius = UDim.new(0, 6)

infYieldBtn.MouseButton1Click:Connect(function()
    local success, err = pcall(function()
        loadstring(game:HttpGet('https://raw.githubusercontent.com/EdgeIY/infiniteyield/master/source', true))()
    end)

    addLog("‚úÖ Inf Yield —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω.")


    end
end)

-- –û–±–Ω–æ–≤–ª—è–µ–º CanvasSize –¥–ª—è –ø—Ä–æ–∫—Ä—É—Ç–∫–∏ –ø–æ —Ä–∞–∑–º–µ—Ä—É –∫–æ–Ω—Ç–µ–Ω—Ç–∞
utilitiesLayout:GetPropertyChangedSignal("AbsoluteContentSize"):Connect(function()
    utilitiesScroll.CanvasSize = UDim2.new(0, 0, 0, utilitiesLayout.AbsoluteContentSize.Y + 10)
end)

local antiAFKBtn = Instance.new("TextButton", utilitiesScroll)
antiAFKBtn.Size = UDim2.new(1, -20, 0, 40)
antiAFKBtn.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
antiAFKBtn.Font = Enum.Font.GothamBold
antiAFKBtn.TextSize = 18
antiAFKBtn.TextColor3 = Color3.fromRGB(230, 230, 230)
antiAFKBtn.Text = "AntiAFK"
Instance.new("UICorner", antiAFKBtn).CornerRadius = UDim.new(0, 6)

-- –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è UI –∏ –ª–æ–≥–∏–∫–∏
local antiAFKGui = nil
local enabled = false
local idleTime = 0
local RunService = game:GetService("RunService")
local VirtualUser = game:GetService("VirtualUser")
local UserInputService = game:GetService("UserInputService")
local Players = game:GetService("Players")
local player = Players.LocalPlayer

-- –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è UI (–æ–¥–∏–Ω —Ä–∞–∑)
local function createAntiAFKGui()
    antiAFKGui = Instance.new("ScreenGui")
    antiAFKGui.Name = "AntiAFK_UI"
    antiAFKGui.ResetOnSpawn = false
    antiAFKGui.Parent = player:WaitForChild("PlayerGui")

    local frame = Instance.new("Frame", antiAFKGui)
    frame.Size = UDim2.new(0, 280, 0, 100)
    frame.Position = UDim2.new(0, 10, 0, 10)
    frame.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
    frame.BorderSizePixel = 0
    Instance.new("UICorner", frame).CornerRadius = UDim.new(0, 10)

    local title = Instance.new("TextLabel", frame)
    title.Size = UDim2.new(1, 0, 0, 30)
    title.BackgroundTransparency = 1
    title.Font = Enum.Font.GothamBold
    title.TextSize = 20
    title.TextColor3 = Color3.fromRGB(200, 200, 200)
    title.Text = "Anti AFK"

    local toggleBtn = Instance.new("TextButton", frame)
    toggleBtn.Size = UDim2.new(0, 120, 0, 40)
    toggleBtn.Position = UDim2.new(0, 10, 0, 50)
    toggleBtn.BackgroundColor3 = Color3.fromRGB(50, 120, 50)
    toggleBtn.Font = Enum.Font.GothamBold
    toggleBtn.TextSize = 18
    toggleBtn.TextColor3 = Color3.fromRGB(230, 230, 230)
    toggleBtn.Text = "OFF"
    Instance.new("UICorner", toggleBtn).CornerRadius = UDim.new(0, 6)

    local timerLabel = Instance.new("TextLabel", frame)
    timerLabel.Size = UDim2.new(0, 130, 0, 40)
    timerLabel.Position = UDim2.new(0, 150, 0, 50)
    timerLabel.BackgroundTransparency = 1
    timerLabel.Font = Enum.Font.GothamBold
    timerLabel.TextSize = 18
    timerLabel.TextColor3 = Color3.fromRGB(200, 200, 200)
    timerLabel.TextXAlignment = Enum.TextXAlignment.Left
    timerLabel.Text = "Idle Time: 0s"

    -- –õ–æ–≥–∏–∫–∞
    local toggleEnabled = false
    local localIdleTime = 0

    local function resetIdle()
        VirtualUser:CaptureController()
        VirtualUser:ClickButton2(Vector2.new())
    end

    local function onInput()
        localIdleTime = 0
    end

    toggleBtn.MouseButton1Click:Connect(function()
        toggleEnabled = not toggleEnabled
        if toggleEnabled then
            toggleBtn.Text = "ON"
            toggleBtn.BackgroundColor3 = Color3.fromRGB(50, 180, 50)
            localIdleTime = 0
        else
            toggleBtn.Text = "OFF"
            toggleBtn.BackgroundColor3 = Color3.fromRGB(50, 120, 50)
            localIdleTime = 0
        end
    end)

    UserInputService.InputBegan:Connect(onInput)
    UserInputService.InputChanged:Connect(onInput)

    RunService.Heartbeat:Connect(function(dt)
        if toggleEnabled then
            localIdleTime = localIdleTime + dt
            timerLabel.Text = ("Idle Time: %.0fs"):format(localIdleTime)

            if math.floor(localIdleTime) % 15 == 0 then
                resetIdle()
                VirtualUser:CaptureController()
                VirtualUser:MoveMouseRel(math.random(-1, 1), math.random(-1, 1))
            end
        else
            localIdleTime = 0
            timerLabel.Text = "Idle Time: 0s"
        end
    end)
end

-- –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏
antiAFKBtn.MouseButton1Click:Connect(function()
    if not antiAFKGui then
        createAntiAFKGui()
        enabled = true
		addLog("‚úÖ antiAfk —É—Å–ø–µ—à–Ω–æ –∑–∞–≥—Ä—É–∂–µ–Ω.")
    else
        enabled = not enabled
        antiAFKGui.Enabled = enabled
    end
end)



