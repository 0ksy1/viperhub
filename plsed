--trixx

repeat wait() until game:IsLoaded()
repeat wait() until game.Players.LocalPlayer and game.Players.LocalPlayer:FindFirstChild("PlayerGui")

local Players = game:GetService("Players")
local TweenService = game:GetService("TweenService")
local LocalPlayer = Players.LocalPlayer
local PlayerGui = LocalPlayer:WaitForChild("PlayerGui")
local TeleportService = game:GetService("TeleportService")
local HttpService = game:GetService("HttpService")
local Workspace = game:GetService("Workspace")
local RunService = game:GetService("RunService")
local UIS = game:GetService("UserInputService")
local lp = Players.LocalPlayer
local char = lp.Character or lp.CharacterAdded:Wait()
local hrp = char:WaitForChild("HumanoidRootPart")
local humanoid = char:WaitForChild("Humanoid")
local player = Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local UserInputService = game:GetService("UserInputService")

local LocalPlayer = Players.LocalPlayer
local espInvisEnabled = false
local espAllEnabled = false

local PlaceID = game.PlaceId
local AllIDs = {}
local foundAnything = ""
local actualHour = os.date("!*t").hour
local isRunning = false

local espConnections = {}
local plotEspEnabled = false
local updating = false
local hue = 0

local petsToFind = {
	    ["Tralalero Tralala"] = true,
	    ["La Vacca Saturno Saturnita"] = true,
	    ["Chimpanzini Spiderini"] = true,
	    ["Los Tralaleritos"] = true,
	    ["Graipuss Medussi"] = true,
	    ["La Grande Combinasion"] = true,
	    ["Garama and Madundung"] = true,
       	    ["Orcalero Orcala"] = true,
    	    ["Torrtuginni Dragonfrutini"] = true,
    	    ["Pot Hotspot"] = true,
    	    ["Las Tralaleritas"] = true,
	    ["Nuclearo Dinossauro"] = true,
	    ["Las Vaquitas Saturnitas"] = true,
	    ["Los Combinasionas"] = true,
	    ["Agarrini la Palini"] = true,
	    ["Dragon Cannelloni"] = true,
	    ["Los Hotspotsitos"] = true,
	    ["Karkerkar Kurkur"] = true,
	    ["Chicleteira Bicicletera"] = true

}

local HttpService = game:GetService("HttpService")

local sendedHOOK = false


local playedSoundOnce = false
local petBeams = {}

local sound = Instance.new("Sound")
sound.SoundId = "rbxassetid://115047431910518"
sound.Volume = 1
sound.Name = "FoundPetSound"
sound.Parent = game:GetService("SoundService") 


local HttpService = game:GetService("HttpService")

local serverCacheFile = "CachedServerList.json"
local serverIndexFile = "CachedServerIndex.json"

local autoExecConfigFile = "AutoExecuteConfig.json"
local autoExecStates = {}

if isfile(autoExecConfigFile) then
	local success, data = pcall(function()
		return HttpService:JSONDecode(readfile(autoExecConfigFile))
	end)
	if success and typeof(data) == "table" then
		autoExecStates = data
	end
end

local function saveAutoExecStates()
	writefile(autoExecConfigFile, HttpService:JSONEncode(autoExecStates))
end


local webhookConfigFile = "webhook_settings.json"

local function loadWebhook()
	if isfile(webhookConfigFile) then
		local data = HttpService:JSONDecode(readfile(webhookConfigFile))
		return data.webhookUrl or ""
	end
	return ""
end

local function saveWebhook(url)
	writefile(webhookConfigFile, HttpService:JSONEncode({ webhookUrl = url }))
end

_G.webhookUrl = loadWebhook()

local webhookUrl = _G.webhookUrl or ""




local function bindCharacter(char)
    humanoid = char:WaitForChild("Humanoid")
end
if player.Character then bindCharacter(player.Character) end
player.CharacterAdded:Connect(bindCharacter)


local jumpForce = 22
local infJumpEnabled = false
local spaceHeld = false


UserInputService.InputBegan:Connect(function(input, gp)
    if gp then return end
    if input.KeyCode == Enum.KeyCode.C then
        infJumpEnabled = not infJumpEnabled
        warn("[InfiniteJump] " .. (infJumpEnabled and "on" or "off"))
    elseif input.KeyCode == Enum.KeyCode.Space then
        spaceHeld = true
    end
end)

UserInputService.InputEnded:Connect(function(input, gp)
    if gp then return end
    if input.KeyCode == Enum.KeyCode.Space then
        spaceHeld = false
    end
end)


RunService.Heartbeat:Connect(function()
    if infJumpEnabled and spaceHeld and humanoid and humanoid.Parent then
        if humanoid:GetState() ~= Enum.HumanoidStateType.Jumping
        and humanoid:GetState() ~= Enum.HumanoidStateType.Freefall then
            humanoid:ChangeState(Enum.HumanoidStateType.Jumping)
        end

        local hrp = humanoid.Parent:FindFirstChild("HumanoidRootPart")
        if hrp then
            local vel = hrp.AssemblyLinearVelocity
            hrp.AssemblyLinearVelocity = Vector3.new(vel.X, jumpForce, vel.Z)
        end
    end
end)


--logger
local TweenService = game:GetService("TweenService")
local Players = game:GetService("Players")

pcall(function() Players.LocalPlayer.PlayerGui:FindFirstChild("PetLoggerUI"):Destroy() end)

local screenGui = Instance.new("ScreenGui")
screenGui.Name = "PetLoggerUI"
screenGui.ResetOnSpawn = false
screenGui.ZIndexBehavior = Enum.ZIndexBehavior.Global
screenGui.Parent = Players.LocalPlayer:WaitForChild("PlayerGui")

local container = Instance.new("Frame")
container.Size = UDim2.new(0, 340, 0, 100)
container.Position = UDim2.new(0, 20, 1, 120)
container.BackgroundColor3 = Color3.fromRGB(15, 15, 20)
container.AnchorPoint = Vector2.new(0, 1)
container.BorderSizePixel = 0
container.Visible = false
container.ZIndex = 5
container.Parent = screenGui

local stroke = Instance.new("UIStroke", container)
stroke.Thickness = 2
stroke.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
stroke.Color = Color3.fromRGB(130, 100, 180)
stroke.Transparency = 0.2
Instance.new("UICorner", container).CornerRadius = UDim.new(0, 12)

local navbar = Instance.new("Frame")
navbar.Size = UDim2.new(1, 0, 0, 30)
navbar.Position = UDim2.new(0, 0, 0, 0)
navbar.BackgroundColor3 = Color3.fromRGB(30, 30, 40)
navbar.BorderSizePixel = 0
navbar.ZIndex = 6
navbar.Parent = container
Instance.new("UICorner", navbar).CornerRadius = UDim.new(0, 12)

local title = Instance.new("TextLabel")
title.Size = UDim2.new(1, 0, 1, 0)
title.Position = UDim2.new(0, 0, 0, 0)
title.BackgroundTransparency = 1
title.Text = "üòàPets Found"
title.Font = Enum.Font.GothamBold
title.TextSize = 18
title.TextColor3 = Color3.fromRGB(255, 255, 255)
title.ZIndex = 7
title.Parent = navbar

local message = Instance.new("TextLabel")
message.Size = UDim2.new(1, -20, 0, 60)
message.Position = UDim2.new(0, 10, 0, 35)
message.BackgroundTransparency = 1
message.Text = ""
message.Font = Enum.Font.GothamMedium
message.TextSize = 20
message.TextColor3 = Color3.fromRGB(255, 255, 255)
message.TextXAlignment = Enum.TextXAlignment.Left
message.TextYAlignment = Enum.TextYAlignment.Top
message.ZIndex = 6
message.Parent = container

function showPetNotification(petName)
	message.Text = petName
	container.Visible = true
	container.Position = UDim2.new(0, 20, 1, 120)

	local tweenIn = TweenService:Create(container, TweenInfo.new(0.4, Enum.EasingStyle.Back, Enum.EasingDirection.Out), {
		Position = UDim2.new(0, 20, 1, -20)
	})
	tweenIn:Play()

	wait(3)

	local tweenOut = TweenService:Create(container, TweenInfo.new(0.3, Enum.EasingStyle.Quad, Enum.EasingDirection.In), {
		Position = UDim2.new(0, 20, 1, 120)
	})
	tweenOut:Play()
	tweenOut.Completed:Wait()
	container.Visible = false
end



local myPlot = nil
local myPlotMin, myPlotMax = nil, nil

local function findMyPlot()
	local plots = Workspace:WaitForChild("Plots")
	for _, plot in pairs(plots:GetChildren()) do
		local sign = plot:FindFirstChild("PlotSign")
		if sign then
			local gui = sign:FindFirstChildOfClass("SurfaceGui")
			if gui then
				local frame = gui:FindFirstChild("Frame")
				if frame then
					local label = frame:FindFirstChildOfClass("TextLabel")
					if label and label.Text then
						local baseName = string.match(label.Text, "^(.-)'s Base$")
						if baseName and string.lower(baseName) == string.lower(Players.LocalPlayer.Name) then
							myPlot = plot

							local cf, size = plot:GetBoundingBox()
							local halfSize = size / 2
							myPlotMin = (cf.Position - halfSize)
							myPlotMax = (cf.Position + halfSize)
							break
						end
					end
				end
			end
		end
	end
end


findMyPlot()







--hook
local function sendWebhook(foundPets, distance)
	if webhookUrl == "" or #foundPets == 0 then return end

	local player = Players.LocalPlayer
	local serverLink = "roblox://experiences/start?placeId=" .. game.PlaceId .. "&gameInstanceId=" .. game.JobId
	local joinScript = "game:GetService('TeleportService'):TeleportToPlaceInstance(" .. game.PlaceId .. ", '" .. game.JobId .. "')"
	local serverPlayerCount = #Players:GetPlayers()
	local timestamp = os.date("%Y-%m-%d %H:%M:%S")
	local versionOS = "v2.65 Premium EDITION"

	local petLines = ""
	for _, petText in ipairs(foundPets) do
		petLines = petLines .. petText .. " \n"
	end

	local embed = {
		title = "‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ@here‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ",
		description =
			"üòé **MrLogger found some pets!** `" .. versionOS .. "`\n\n" ..
			"**üì¶ Pets:**\n" .. petLines .. "\n" ..
			"**üë§ Explorer:** `" .. player.Name .. "`\n" ..
			"**üë• Players:** `" .. serverPlayerCount .. "`\n" ..
			"**‚è∞ Time:** `" .. timestamp .. "`\n\n" ..
			"**üöÄ Server Link:**\n" .. serverLink .. "\n\n" ..
			"**üìÑ Job ID:**\n`" .. game.JobId .. "`\n\n" ..
			"**üíª Join Script:**\n```lua\n" .. joinScript .. "\n```\n" ..
			"‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚úÖ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ‚îÅ",
		color = 14177041 
	}

	local payload = {
		["username"] = "üòàMrLogger",
		["content"] = "@here", 
		["embeds"] = {embed}
	}

	local json = HttpService:JSONEncode(payload)

	local request = (syn and syn.request) or (http and http.request) or http_request or request
	if request then
		pcall(function()
			request({
				Url = webhookUrl,
				Method = "POST",
				Headers = {
					["Content-Type"] = "application/json"
				},
				Body = json
			})
		end)
	end
end




local function loadHopStatus()
	local success, result = pcall(function()
		return HttpService:JSONDecode(readfile("ServerHopActive.json"))
	end)
	if success and typeof(result) == "boolean" then
		return result
	else
		writefile("ServerHopActive.json", HttpService:JSONEncode(false))
		return false
	end
end

local function saveHopStatus(value)
	writefile("ServerHopActive.json", HttpService:JSONEncode(value))
end

local isRunning = loadHopStatus()









local function loadPetSettings()
	local success, result = pcall(function()
		return HttpService:JSONDecode(readfile("PetFinderSettings.json"))
	end)
	if success and typeof(result) == "table" then
		for name, state in pairs(result) do
			if petsToFind[name] ~= nil then
				petsToFind[name] = state
			end
		end
	end
end

local function savePetSettings()
	writefile("PetFinderSettings.json", HttpService:JSONEncode(petsToFind))
end

loadPetSettings()

local success, result = pcall(function()
	return HttpService:JSONDecode(readfile("NotSameServers.json"))
end)

if success and typeof(result) == "table" then
	AllIDs = result
else
	AllIDs = { actualHour }
	writefile("NotSameServers.json", HttpService:JSONEncode(AllIDs))
end


--gui start
local ScreenGui = Instance.new("ScreenGui", PlayerGui)
ScreenGui.Name = "viperhub"
ScreenGui.ResetOnSpawn = false

local mainFrame = Instance.new("Frame", ScreenGui)
mainFrame.Size = UDim2.new(0, 500, 0, 350)
mainFrame.Position = UDim2.new(0.5, -250, 0.5, -175)
mainFrame.BackgroundColor3 = Color3.fromRGB(20, 20, 25)
mainFrame.BorderSizePixel = 0
mainFrame.Active = true
mainFrame.Draggable = true
Instance.new("UICorner", mainFrame).CornerRadius = UDim.new(0, 12)

local stroke = Instance.new("UIStroke")
stroke.Thickness = 3
stroke.Transparency = 0 
stroke.ApplyStrokeMode = Enum.ApplyStrokeMode.Border
stroke.Parent = mainFrame

local RunService = game:GetService("RunService")

RunService.RenderStepped:Connect(function()
	local hue = tick() % 5 / 5 
	local rgb = Color3.fromHSV(hue, 1, 1)
	stroke.Color = rgb
end)


local navbar = Instance.new("Frame", mainFrame)
navbar.Size = UDim2.new(1, 0, 0, 40)
navbar.Position = UDim2.new(0, 0, 0, 0)
navbar.BackgroundColor3 = Color3.fromRGB(35, 35, 45)
navbar.BorderSizePixel = 0
navbar.ZIndex = 2
Instance.new("UICorner", navbar).CornerRadius = UDim.new(0, 12)

local title = Instance.new("TextLabel", navbar)
title.Size = UDim2.new(0, 200, 1, 0)
title.Position = UDim2.new(0, 12, 0, 0)
title.Text = "viperhub v2.65 Premium Edition"
title.TextColor3 = Color3.fromRGB(250, 250, 250)
title.Font = Enum.Font.FredokaOne
title.TextSize = 22
title.BackgroundTransparency = 1
title.TextXAlignment = Enum.TextXAlignment.Left
title.ZIndex = 3


local closeBtn = Instance.new("TextButton", navbar)
closeBtn.Size = UDim2.new(0, 24, 0, 24)
closeBtn.Position = UDim2.new(1, -30, 0, 8)
closeBtn.Text = "X"
closeBtn.TextColor3 = Color3.fromRGB(255, 80, 80)
closeBtn.Font = Enum.Font.GothamBold
closeBtn.TextSize = 16
closeBtn.BackgroundColor3 = Color3.fromRGB(40, 40, 50)
closeBtn.BorderSizePixel = 0
closeBtn.ZIndex = 3
Instance.new("UICorner", closeBtn).CornerRadius = UDim.new(0, 6)


local minimizeBtn = Instance.new("TextButton", navbar)
minimizeBtn.Size = UDim2.new(0, 24, 0, 24)
minimizeBtn.Position = UDim2.new(1, -60, 0, 8)
minimizeBtn.Text = "‚îÅ"
minimizeBtn.TextColor3 = Color3.fromRGB(200, 200, 255)
minimizeBtn.Font = Enum.Font.GothamBold
minimizeBtn.TextSize = 16
minimizeBtn.BackgroundColor3 = Color3.fromRGB(40, 40, 50)
minimizeBtn.BorderSizePixel = 0
minimizeBtn.ZIndex = 3
Instance.new("UICorner", minimizeBtn).CornerRadius = UDim.new(0, 6)


local TabButtonsFrame = Instance.new("Frame", mainFrame)
TabButtonsFrame.Size = UDim2.new(0, 120, 1, -50)
TabButtonsFrame.Position = UDim2.new(0, 0, 0, 50)
TabButtonsFrame.BackgroundColor3 = Color3.fromRGB(25, 25, 30)
TabButtonsFrame.BorderSizePixel = 0
Instance.new("UICorner", TabButtonsFrame).CornerRadius = UDim.new(0, 12)


local tabs = {"Main","Utilities", "Buy", "Pet Settings", "Settings","Info"}
local pages = {}

for i, tabName in ipairs(tabs) do
	local tabButton = Instance.new("TextButton", TabButtonsFrame)
	tabButton.Size = UDim2.new(1, -10, 0, 40)
	tabButton.Position = UDim2.new(0, 5, 0, (i - 1) * 45 + 10)
	tabButton.Text = tabName
	tabButton.Font = Enum.Font.GothamBold
	tabButton.TextColor3 = Color3.fromRGB(200, 200, 255)
	tabButton.BackgroundColor3 = Color3.fromRGB(35, 35, 45)
	tabButton.BorderSizePixel = 0
	tabButton.TextSize = 16
	Instance.new("UICorner", tabButton).CornerRadius = UDim.new(0, 8)

	local page = Instance.new("Frame", mainFrame)
	page.Size = UDim2.new(1, -130, 1, -60)
	page.Position = UDim2.new(0, 130, 0, 50)
	page.BackgroundColor3 = Color3.fromRGB(30, 30, 40)
	page.BorderSizePixel = 0
	page.Visible = (i == 1)
	Instance.new("UICorner", page).CornerRadius = UDim.new(0, 10)

	pages[tabName] = page

	tabButton.MouseButton1Click:Connect(function()
		for _, pg in pairs(pages) do
			pg.Visible = false
		end
		page.Visible = true
	end)
end


local isMinimized = false
local originalSize = mainFrame.Size

minimizeBtn.MouseButton1Click:Connect(function()
	if isMinimized then
		local tween = TweenService:Create(mainFrame, TweenInfo.new(0.3), {Size = originalSize})
		tween:Play()
		wait(0.3)
		TabButtonsFrame.Visible = true
		for _, page in pairs(pages) do
			page.Visible = false
		end
		pages["Main"].Visible = true
	else
		TabButtonsFrame.Visible = false
		for _, page in pairs(pages) do
			page.Visible = false
		end
		local tween = TweenService:Create(mainFrame, TweenInfo.new(0.3), {Size = UDim2.new(0, 500, 0, 50)})
		tween:Play()
	end
	isMinimized = not isMinimized
end)

closeBtn.MouseButton1Click:Connect(function()
	ScreenGui:Destroy()
end)


local purchasePanel = Instance.new("Frame", pages["Buy"])
purchasePanel.Size = UDim2.new(1, -20, 1, -20)
purchasePanel.Position = UDim2.new(0, 10, 0, 10)
purchasePanel.BackgroundColor3 = Color3.fromRGB(30, 30, 40)
purchasePanel.BorderSizePixel = 0
purchasePanel.ZIndex = 1
Instance.new("UICorner", purchasePanel).CornerRadius = UDim.new(0, 10)

local scroll = Instance.new("ScrollingFrame", purchasePanel)
scroll.Size = UDim2.new(1, 0, 1, 0)
scroll.CanvasSize = UDim2.new(0, 0, 0, 0)
scroll.ScrollBarThickness = 8
scroll.BackgroundTransparency = 1
scroll.BorderSizePixel = 0
scroll.ZIndex = 2

local uiList = Instance.new("UIListLayout", scroll)
uiList.Padding = UDim.new(0, 6)
uiList.SortOrder = Enum.SortOrder.LayoutOrder

local purchases = {
	{ Name = "Medusa's Head", Icon = "ü§¢" },
	{ Name = "Invisibility Cloak", Icon = "üß•" },
	{ Name = "Quantum Cloner", Icon = "üß™" },
	{ Name = "Grapple Hook", Icon = "üñ§" },
	{ Name = "Boogie Bomb", Icon = "ü§©" },
	{ Name = "Trap", Icon = "üòã" },
	{ Name = "Coil Combo", Icon = "üåÄ" },
	{ Name = "Bee Launcher", Icon = "üêù" },
	{ Name = "Web Slinger", Icon = "üòé" },
	{ Name = "All Seeing Sentry", Icon = "ü•ö" },
	{ Name = "Body Swap Potion", Icon = "üëÅÔ∏è" }
}

for _, item in ipairs(purchases) do
	local btn = Instance.new("TextButton", scroll)
	btn.Size = UDim2.new(1, -20, 0, 40)
	btn.Text = item.Icon .. "  " .. item.Name
	btn.BackgroundColor3 = Color3.fromRGB(120, 80, 200)
	btn.TextColor3 = Color3.fromRGB(220, 220, 255)
	btn.Font = Enum.Font.GothamBold
	btn.TextSize = 16
	btn.BorderSizePixel = 0
	btn.ZIndex = 2
	Instance.new("UICorner", btn).CornerRadius = UDim.new(0, 8)

	btn.MouseEnter:Connect(function()
		btn.BackgroundColor3 = Color3.fromRGB(110, 70, 190)
	end)
	btn.MouseLeave:Connect(function()
		btn.BackgroundColor3 = Color3.fromRGB(120, 80, 200)
	end)

	btn.MouseButton1Click:Connect(function()
		print("üõí –ü–æ–∫—É–ø–∫–∞: " .. item.Name)
		pcall(function()
			game:GetService("ReplicatedStorage")
				:WaitForChild("Packages")
				:WaitForChild("Net")
				:WaitForChild("RF/CoinsShopService/RequestBuy")
				:InvokeServer(item.Name)
		end)
	end)
end

task.defer(function()
	scroll.CanvasSize = UDim2.new(0, 0, 0, uiList.AbsoluteContentSize.Y + 10)
	uiList:GetPropertyChangedSignal("AbsoluteContentSize"):Connect(function()
		scroll.CanvasSize = UDim2.new(0, 0, 0, uiList.AbsoluteContentSize.Y + 10)
	end)
end)



pcall(function()
	local loaded = readfile("NotSameServers.json")
	AllIDs = HttpService:JSONDecode(loaded)
end)

local statusLabel = Instance.new("TextLabel", pages["Main"])
statusLabel.Size = UDim2.new(1, -20, 0, 40)
statusLabel.Position = UDim2.new(0, 10, 0, 10)
statusLabel.Text = "‚è≥ Waiting to Start..."
statusLabel.TextColor3 = Color3.fromRGB(130, 200, 255)
statusLabel.Font = Enum.Font.GothamSemibold
statusLabel.TextSize = 16
statusLabel.BackgroundTransparency = 1
statusLabel.TextWrapped = true

local petResultFrame = Instance.new("ScrollingFrame", pages["Main"])
petResultFrame.Name = "PetResultFrame"
petResultFrame.Size = UDim2.new(1, -20, 0, 120)
petResultFrame.Position = UDim2.new(0, 10, 0, 50)
petResultFrame.CanvasSize = UDim2.new(0, 0, 0, 0)
petResultFrame.ScrollBarThickness = 6
petResultFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 40)
petResultFrame.BackgroundTransparency = 0.15
petResultFrame.BorderSizePixel = 0
petResultFrame.AutomaticCanvasSize = Enum.AutomaticSize.Y
petResultFrame.ScrollingDirection = Enum.ScrollingDirection.Y

local layout = Instance.new("UIListLayout", petResultFrame)
layout.SortOrder = Enum.SortOrder.LayoutOrder
layout.Padding = UDim.new(0, 4)

local corner = Instance.new("UICorner", petResultFrame)
corner.CornerRadius = UDim.new(0, 8)


local idLabel = Instance.new("TextLabel", pages["Settings"])
idLabel.Size = UDim2.new(1, -20, 0.6, 0)
idLabel.Position = UDim2.new(0, 10, 0, -70)
idLabel.BackgroundTransparency = 1
idLabel.TextColor3 = Color3.new(1, 1, 1)
idLabel.Font = Enum.Font.Gotham
idLabel.TextSize = 14
idLabel.TextWrapped = true
idLabel.Text = "Server ID: \n" .. game.JobId

local copyBtn = Instance.new("TextButton", pages["Settings"])
copyBtn.Size = UDim2.new(0.85, 0, 0.1, 0)
copyBtn.Position = UDim2.new(0, 25, 0, 45)
copyBtn.BackgroundColor3 = Color3.fromRGB(120, 80, 200)
copyBtn.TextColor3 = Color3.new(1, 1, 1)
copyBtn.Font = Enum.Font.GothamBold
copyBtn.TextSize = 14
copyBtn.Text = "Copy"
Instance.new("UICorner", copyBtn)

copyBtn.MouseButton1Click:Connect(function()
	setclipboard(game.JobId)
	copyBtn.Text = "Copied!"
	task.wait(1.5)
	copyBtn.Text = "Copy"
end)




local function pulseRGB(obj)
	spawn(function()
		while obj and obj.Parent do
			obj.TextColor3 = Color3.fromHSV(tick() % 5 / 5, 1, 1)
			wait(0.2)
		end
	end)
end


local startButton = Instance.new("TextButton", pages["Main"])
startButton.Size = UDim2.new(0, 200, 0, 36)
startButton.Position = UDim2.new(0, 10, 0, 250)
startButton.Text = "‚ñ∂Ô∏è Start Hop"
startButton.TextColor3 = Color3.new(1, 1, 1)
startButton.Font = Enum.Font.GothamBold
startButton.TextSize = 18
startButton.BackgroundColor3 = Color3.fromRGB(55, 60, 109)
startButton.BorderSizePixel = 0
Instance.new("UICorner", startButton).CornerRadius = UDim.new(0, 8)

local stopButton = Instance.new("TextButton", pages["Main"])
stopButton.Size = UDim2.new(0, 150, 0, 36)
stopButton.Position = UDim2.new(0, 210, 0, 250)
stopButton.Text = "‚èπ Stop"
stopButton.TextColor3 = Color3.new(1, 1, 1)
stopButton.Font = Enum.Font.GothamBold
stopButton.TextSize = 18
stopButton.BackgroundColor3 = Color3.fromRGB(66, 60, 109)
Instance.new("UICorner", stopButton).CornerRadius = UDim.new(0, 8)

stopButton.MouseButton1Click:Connect(function()
	isRunning = false
	saveHopStatus(false)
	statusLabel.Text = "‚èπ ServerHop Stopped"
end)

local autoHopButton = Instance.new("TextButton", pages["Main"])
autoHopButton.Size = UDim2.new(1, -20, 0, 36)
autoHopButton.Position = UDim2.new(0, 10, 1, -80)
autoHopButton.Text = "üîÑ AutoHop"
autoHopButton.TextColor3 = Color3.new(1, 1, 1)
autoHopButton.Font = Enum.Font.GothamBold
autoHopButton.TextSize = 18
autoHopButton.BackgroundColor3 = Color3.fromRGB(55, 60, 90)
Instance.new("UICorner", autoHopButton).CornerRadius = UDim.new(0, 8)




local function clearBeams()
	for _, beam in ipairs(petBeams) do
		if beam and beam.Parent then
			beam:Destroy()
		end
	end
	table.clear(petBeams)
end

local function getOrCreatePlayerAttachment()
	local att = hrp:FindFirstChild("PlayerBeamAttachment")
	if not att then
		att = Instance.new("Attachment")
		att.Name = "PlayerBeamAttachment"
		att.Parent = hrp
	end
	return att
end


local function getMutationMap()
	local mutationMap = {}

	local plots = Workspace:FindFirstChild("Plots")
	if not plots then return mutationMap end

	for _, plot in ipairs(plots:GetChildren()) do
		local podiums = plot:FindFirstChild("AnimalPodiums")
		if podiums then
			for _, podium in ipairs(podiums:GetChildren()) do
				local base = podium:FindFirstChild("Base")
				local spawn = base and base:FindFirstChild("Spawn")
				local attachment = spawn and spawn:FindFirstChild("Attachment")
				local overhead = attachment and attachment:FindFirstChild("AnimalOverhead")

				if overhead then
					local displayName = overhead:FindFirstChild("DisplayName")
					local mutation = overhead:FindFirstChild("Mutation")
					local generation = overhead:FindFirstChild("Generation")
					local stolen = overhead:FindFirstChild("Stolen")

					if spawn and displayName and displayName:IsA("TextLabel") then
						local name = displayName.Text
						local mutationText = nil

						if stolen and stolen:IsA("TextLabel") and stolen.Visible and stolen.Text == "IN MACHINE" then
							mutationText = "üìòIN MACHINEüìò"
						elseif mutation and mutation:IsA("TextLabel") and mutation.Visible and mutation.Text ~= "" and mutation.Text ~= "None" then
							mutationText = "‚≠êÔ∏è" .. mutation.Text .. "‚≠êÔ∏è"
						end

						local generationText = (generation and generation:IsA("TextLabel") and generation.Text ~= "") and generation.Text or "Unknown"

						table.insert(mutationMap, {
							name = name,
							position = spawn.Position,
							mutation = mutationText,
							generation = generationText
						})
					end
				end
			end
		end
	end

	return mutationMap
end


local function scanForPets()
	clearBeams()
	local foundCount = {}
	local alreadyTagged = {}
	local mutationData = getMutationMap()

	local playerAtt = getOrCreatePlayerAttachment()

	for _, obj in pairs(Workspace:GetDescendants()) do
		if petsToFind[obj.Name] and obj:IsA("Model") then
			local root = obj:FindFirstChild("HumanoidRootPart") or obj.PrimaryPart
			if root and myPlotMin and myPlotMax then
				local pos = root.Position
				if pos.X >= myPlotMin.X and pos.X <= myPlotMax.X
				and pos.Y >= myPlotMin.Y and pos.Y <= myPlotMax.Y
				and pos.Z >= myPlotMin.Z and pos.Z <= myPlotMax.Z then
					continue 
				end
			end

			if root and obj:IsDescendantOf(Workspace) and not alreadyTagged[obj] then
				if (root.Position - hrp.Position).Magnitude < 5000 then

					local mutationType = nil
					local generationText = "Unknown"

					for _, data in ipairs(mutationData) do
						local dataNameLower = string.lower(data.name)
						local objNameLower = string.lower(obj.Name)
						local distance = (data.position - root.Position).Magnitude
						local exactMatch = (dataNameLower == objNameLower)
						local partialMatch = string.find(dataNameLower, objNameLower) or string.find(objNameLower, dataNameLower)

						if exactMatch and distance < 7 then
							mutationType = data.mutation
							generationText = data.generation
							break
						elseif partialMatch and distance < 3 then
							mutationType = data.mutation
							generationText = data.generation
							break
						end
					end

					if not obj:FindFirstChild("PetTag") then
						local tag = Instance.new("BillboardGui")
						tag.Name = "PetTag"
						tag.Size = UDim2.new(0, 140, 0, 80)
						tag.AlwaysOnTop = true
						tag.StudsOffset = Vector3.new(0, 3, 0)
						tag.Parent = obj

						local label = Instance.new("TextLabel")
						label.Size = UDim2.new(1, 0, 1, 0)
						label.BackgroundTransparency = 1
						label.TextColor3 = Color3.new(1, 1, 1)
						label.TextStrokeTransparency = 0.5
						label.TextScaled = true
						label.Font = Enum.Font.GothamBold

						local labelText = ""
						if mutationType then
							labelText = mutationType .. " "
						end
						labelText = labelText .. obj.Name .. " - " .. generationText .. " ‚úÖ"
						label.Text = labelText
						label.Parent = tag

						pulseRGB(label)
					end


					local petAtt = Instance.new("Attachment")
					petAtt.Name = "PetBeamAttachment"
					petAtt.Parent = root

					local beam = Instance.new("Beam")
					beam.Name = "PetBeam"
					beam.Attachment0 = playerAtt
					beam.Attachment1 = petAtt
					beam.Width0 = 0.15
					beam.Width1 = 0.15
					beam.LightEmission = 1
					beam.Transparency = NumberSequence.new(0.1)
					beam.FaceCamera = true
					beam.Parent = root

					task.spawn(function()
						while beam and beam.Parent do
							local hue = tick() % 5 / 5
							local color = Color3.fromHSV(hue, 1, 1)
							beam.Color = ColorSequence.new(color)
							task.wait(0.1)
						end
					end)

					table.insert(petBeams, beam)


					local key = (mutationType and mutationType .. " " or "") .. obj.Name .. " - " .. generationText .. " ‚úÖ"
					foundCount[key] = (foundCount[key] or 0) + 1
					alreadyTagged[obj] = true
				end
			end
		end
	end

	for _, child in ipairs(petResultFrame:GetChildren()) do
		if child:IsA("TextLabel") then
			child:Destroy()
		end
	end

	if next(foundCount) then
		local displayLines = {}

		for name, count in pairs(foundCount) do
			local fullText = name .. " (x" .. count .. ")"

			local label = Instance.new("TextLabel")
			label.Size = UDim2.new(1, -10, 0, 22)
			label.BackgroundTransparency = 1
			label.TextColor3 = Color3.fromRGB(240, 240, 240)
			label.Font = Enum.Font.Gotham
			label.TextSize = 14
			label.TextXAlignment = Enum.TextXAlignment.Left
			label.Text = fullText
			label.Parent = petResultFrame

			table.insert(displayLines, fullText)
		end

		showPetNotification(table.concat(displayLines, "\n"))

		if not playedSoundOnce then
			playedSoundOnce = true
			sound:Play()
		end

		if not sendedHOOK then
			sendWebhook(displayLines)
			sendedHOOK = true
		end

	else
		local label = Instance.new("TextLabel")
		label.Size = UDim2.new(1, -10, 0, 22)
		label.BackgroundTransparency = 1
		label.TextColor3 = Color3.fromRGB(180, 180, 180)
		label.Font = Enum.Font.Gotham
		label.TextSize = 14
		label.TextXAlignment = Enum.TextXAlignment.Left
		label.Text = "‚ùå Found pets: none"
		label.Parent = petResultFrame
	end
end



local speedBase = 75       
local variation = 2        
local isEnabled = false
local smoothing = 0.5
local minMoveThreshold = 0.01
local defaultSpeed = humanoid.WalkSpeed 

local function bindCharacter(char)
	if not char then return end
	humanoid = char:FindFirstChildOfClass("Humanoid")
	hrp = char:FindFirstChild("HumanoidRootPart")
	if humanoid then
		defaultSpeed = humanoid.WalkSpeed or defaultSpeed
		if not isEnabled then
			humanoid.WalkSpeed = defaultSpeed
		end
	end
end

if player.Character then
	bindCharacter(player.Character)
end
player.CharacterAdded:Connect(bindCharacter)

local function setNormalSpeed()
	if humanoid then
		humanoid.WalkSpeed = defaultSpeed
	end
end

RunService.Heartbeat:Connect(function()
	if not humanoid or not hrp then return end

	if isEnabled then
		local moveDir = humanoid.MoveDirection
		if moveDir and moveDir.Magnitude > minMoveThreshold then
			local currentVel = hrp.AssemblyLinearVelocity
			-- –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∞—è —Å–∫–æ—Ä–æ—Å—Ç—å
			local randSpeed = speedBase + math.random(-variation, variation)
			local targetVel = Vector3.new(moveDir.X * randSpeed, currentVel.Y, moveDir.Z * randSpeed)
			local smoothVel = currentVel:Lerp(targetVel, smoothing)
			hrp.AssemblyLinearVelocity = Vector3.new(smoothVel.X, currentVel.Y, smoothVel.Z)
		else
			setNormalSpeed()
		end
	else
		setNormalSpeed()
	end
end)

UserInputService.InputBegan:Connect(function(input, gameProcessed)
	if gameProcessed then return end
	if input.KeyCode == Enum.KeyCode.V then
		isEnabled = not isEnabled
		if not isEnabled then
			setNormalSpeed()
		end
		warn("[SpeedHack] " .. (isEnabled and "on" or "off"))
	end
end)
spawn(function()
	while true do
		scanForPets()
		wait(0.1)
	end
end)

local function hasWantedPets()
	local mutationData = getMutationMap()

	for name, enabled in pairs(petsToFind) do
		if enabled then
			for _, obj in pairs(Workspace:GetDescendants()) do
				if obj:IsA("Model") and obj.Name == name then
					local root = obj:FindFirstChild("HumanoidRootPart") or obj.PrimaryPart
					if root then
						for _, data in ipairs(mutationData) do
							if string.lower(data.name) == string.lower(obj.Name) and (data.position - root.Position).Magnitude < 5 then

								if data.mutation == "üìòIN MACHINEüìò" then
									break
								end

								return true
							end
						end
					end
				end
			end
		end
	end

	return false
end


local function teleportToNextServer()
	if not isRunning then
		statusLabel.Text = "‚èπ AutoHop Stopped"
		return
	end

	statusLabel.Text = "üîÅ Searching servers..."
	local baseURL = "https://games.roblox.com/v1/games/" .. PlaceID .. "/servers/Public?sortOrder=Asc&limit=25"
	local cursor = ""
	local attemptedServers = {}
	local failAttempts = 0
	local serverCount = 0
	local totalServersInBatch = 25

  local cachedServers = {}
  local currentIndex = 1
  
  if isfile(serverCacheFile) then
  	local success, data = pcall(function()
  		return HttpService:JSONDecode(readfile(serverCacheFile))
  	end)
  	if success and typeof(data) == "table" then
  		cachedServers = data
  	end
  end
  
  if isfile(serverIndexFile) then
  	local success, data = pcall(function()
  		return tonumber(readfile(serverIndexFile))
  	end)
  	if success and data then
  		currentIndex = data
  	end
  end



	while isRunning do
		
		if currentIndex > #cachedServers then
			local url = baseURL .. (cursor ~= "" and "&cursor=" .. HttpService:UrlEncode(cursor) or "")
			local success, response = pcall(function()
				return HttpService:JSONDecode(game:HttpGet(url))
			end)

			if success and response and response.data then
				cursor = response.nextPageCursor or ""
				failAttempts = 0
				cachedServers = response.data
				currentIndex = 1
				totalServersInBatch = #cachedServers

        pcall(function()
		        writefile(serverCacheFile, HttpService:JSONEncode(cachedServers))
		        writefile(serverIndexFile, tostring(currentIndex))
	      end)

				wait(1 + math.random()) 
			else
				failAttempts += 1
				statusLabel.Text = "‚ö†Ô∏è Failed to fetch servers. Retrying... (x" .. failAttempts .. ")"
				wait(3 + math.random()) 
				continue
			end
		end

		local server = cachedServers[currentIndex]
		currentIndex += 1
    
    pcall(function()
	      writefile(serverIndexFile, tostring(currentIndex))
    end)

		if not server then continue end
		if not isRunning then return end

		local id = tostring(server.id)
		local alreadyTried = table.find(AllIDs, id) or attemptedServers[id]

		if server.playing < server.maxPlayers and not alreadyTried then
			if hasWantedPets() then
				statusLabel.Text = "‚úÖ Pets Found! AutoHop stopped"
				isRunning = false
				saveHopStatus(false)
				return
			end

			serverCount += 1
			table.insert(AllIDs, id)
			attemptedServers[id] = true

			statusLabel.Text = "üåê Switching servers: Server (" .. serverCount .. "/" .. totalServersInBatch .. ")"
			pcall(function()
				writefile("NotSameServers.json", HttpService:JSONEncode(AllIDs))
				TeleportService:TeleportToPlaceInstance(PlaceID, id, Players.LocalPlayer)
			end)

			wait(0.3)
		end

		if cursor == "" and currentIndex > #cachedServers then
			statusLabel.Text = "‚ôªÔ∏è All servers tried. Resetting history..."
			pcall(function() delfile("NotSameServers.json") end)
			AllIDs = { actualHour }
			writefile("NotSameServers.json", HttpService:JSONEncode(AllIDs))
			cursor = ""
			cachedServers = {}
			currentIndex = 1
      pcall(function()
	        delfile(serverCacheFile)
	        delfile(serverIndexFile)
      end)

			wait(1)
		end
	end
end



autoHopButton.MouseButton1Click:Connect(function()
	isRunning = true
	saveHopStatus(true)
	statusLabel.Text = "üîÑ AutoHop started"
	teleportToNextServer()
end)


startButton.MouseButton1Click:Connect(function()
	if isRunning then return end

	isRunning = true
	statusLabel.Text = "üîÅ Starting AutoHop..."

	spawn(function()
		while isRunning do
			if hasWantedPets() then
				statusLabel.Text = "‚úÖ Pets Found! Stopping AutoHop"
				isRunning = false
				break
			end
			statusLabel.Text = "üîÅ Getting servers..."
			teleportToNextServer()
			wait(5)
		end
	end)
end)


local petPanel = Instance.new("ScrollingFrame")
petPanel.Size = UDim2.new(0, 350, 1, -20)
petPanel.Position = UDim2.new(0, 10, 0, 10)
petPanel.CanvasSize = UDim2.new(0, 0, 0, 0)
petPanel.ScrollBarThickness = 4
petPanel.ScrollBarImageColor3 = Color3.fromRGB(130, 80, 200) 
petPanel.BackgroundColor3 = Color3.fromRGB(30, 30, 45) 
petPanel.BorderSizePixel = 0
petPanel.ClipsDescendants = true
petPanel.ZIndex = 1
petPanel.Parent = pages["Pet Settings"]

Instance.new("UICorner", petPanel).CornerRadius = UDim.new(0, 10)

local layout = Instance.new("UIListLayout", petPanel)
layout.Padding = UDim.new(0, 6)
layout.SortOrder = Enum.SortOrder.LayoutOrder

layout:GetPropertyChangedSignal("AbsoluteContentSize"):Connect(function()
	petPanel.CanvasSize = UDim2.new(0, 0, 0, layout.AbsoluteContentSize.Y + 10)
end)

for name, state in pairs(petsToFind) do
	local btn = Instance.new("TextButton")
	btn.Size = UDim2.new(1, -14, 0, 30) 
	btn.Text = (state and "‚úÖ " or "‚ùå ") .. name
	btn.TextColor3 = state and Color3.fromRGB(200, 255, 200) or Color3.fromRGB(255, 100, 120)
	btn.Font = Enum.Font.Gotham
	btn.TextSize = 14
	btn.BackgroundColor3 = Color3.fromRGB(120, 80, 200)
	btn.BorderSizePixel = 0
	btn.Parent = petPanel

	Instance.new("UICorner", btn).CornerRadius = UDim.new(0, 6)

	btn.MouseButton1Click:Connect(function()
		petsToFind[name] = not petsToFind[name]
		btn.Text = (petsToFind[name] and "‚úÖ " or "‚ùå ") .. name
		btn.TextColor3 = petsToFind[name] and Color3.fromRGB(200, 255, 200) or Color3.fromRGB(255, 100, 120)
		savePetSettings()
	end)
end


--esp


local function createESP(char, tag)
	if char:FindFirstChild(tag) then return end

	local highlight = Instance.new("Highlight")
	highlight.Name = tag
	highlight.FillTransparency = 0.5
	highlight.OutlineColor = Color3.new(1, 1, 1)
	highlight.OutlineTransparency = 0
	highlight.Adornee = char
	highlight.Parent = char


	local start = tick()
	RunService.RenderStepped:Connect(function()
		if not highlight or not highlight.Parent then return end
		local t = tick() - start
		local r = math.sin(t * 2) * 0.5 + 0.5
		local g = math.sin(t * 2 + 2) * 0.5 + 0.5
		local b = math.sin(t * 2 + 4) * 0.5 + 0.5
		highlight.FillColor = Color3.new(r, g, b)
	end)
end

local function removeESP(char, tag)
  local esp = char:FindFirstChild(tag)
  if esp then esp:Destroy() end
end

local function createMarker(root)
  if not root:FindFirstChild("AntiInvisMarker") then
    local marker = Instance.new("BillboardGui")
    marker.Name = "AntiInvisMarker"
    marker.Adornee = root
    marker.Size = UDim2.new(0, 100, 0, 40)
    marker.AlwaysOnTop = true
    marker.StudsOffset = Vector3.new(0, 3, 0)
    marker.Parent = root

    local label = Instance.new("TextLabel")
    label.Size = UDim2.new(1, 0, 1, 0)
    label.BackgroundTransparency = 1
    label.Text = "üëª Hidden Player"
    label.TextColor3 = Color3.new(1, 0, 0)
    label.TextScaled = true
    label.Font = Enum.Font.GothamBold
    label.Parent = marker
  end
end

local function removeMarker(root)
  local m = root:FindFirstChild("AntiInvisMarker")
  if m then m:Destroy() end
end

local function isInvisible(char)
  for _, part in pairs(char:GetDescendants()) do
    if part:IsA("BasePart") and part.Transparency < 0.98 and part.Name ~= "HumanoidRootPart" then
      return false
    end
  end
  return true
end

local function updateESP()
  for _, player in pairs(Players:GetPlayers()) do
    if player ~= LocalPlayer then
      local char = player.Character
      if char and char:IsDescendantOf(workspace) then
        local root = char:FindFirstChild("HumanoidRootPart")
        local invis = isInvisible(char)

        if espAllEnabled then
          createESP(char, "ESP_All")
        else
          removeESP(char, "ESP_All")
        end

        if espInvisEnabled and invis then
          createESP(char, "ESP_Invis")
          if root then createMarker(root) end
        else
          removeESP(char, "ESP_Invis")
          if root then removeMarker(root) end
        end
      end
    end
  end
end

UserInputService.InputBegan:Connect(function(input, gpe)
  if gpe then return end
  if input.KeyCode == Enum.KeyCode.Q then
    espInvisEnabled = not espInvisEnabled
    print("üëª ESP Invisibles: " .. (espInvisEnabled and "ON" or "OFF"))
  elseif input.KeyCode == Enum.KeyCode.E then
    espAllEnabled = not espAllEnabled
    print("üßç ESP All Players: " .. (espAllEnabled and "ON" or "OFF"))
  end
end)

RunService.Stepped:Connect(function()
  if espInvisEnabled or espAllEnabled then
    updateESP()
  end
end)

local function clearESP()
	for _, data in pairs(espConnections) do
		if data.gui then
			data.gui:Destroy()
		end
	end
	espConnections = {}
	updating = false
end


local function createESP(plotModel, adorneePart, remainingTextObj)
	local billboard = Instance.new("BillboardGui")
	billboard.Name = "ESP_RemainingTime"
	billboard.Adornee = adorneePart
	billboard.Size = UDim2.new(0, 200, 0, 50)
	billboard.StudsOffset = Vector3.new(0, 5, 0)
	billboard.AlwaysOnTop = true

	local label = Instance.new("TextLabel")
	label.Size = UDim2.new(1, 0, 1, 0)
	label.BackgroundTransparency = 1
	label.Text = ""
	label.TextColor3 = Color3.fromHSV(hue, 1, 1)
	label.TextStrokeTransparency = 0
	label.TextScaled = true
	label.Font = Enum.Font.SourceSansBold
	label.Parent = billboard

	billboard.Parent = adorneePart


	espConnections[plotModel] = {
		gui = billboard,
		label = label,
		sourceText = remainingTextObj
	}
end


function scanAndCreateESP()
	clearESP()

	local plots = Workspace:FindFirstChild("Plots")
	if not plots then return end

	for _, plot in ipairs(plots:GetChildren()) do
		local purchases = plot:FindFirstChild("Purchases")
		if purchases then
			local block = purchases:FindFirstChild("PlotBlock")
			if block and block:FindFirstChild("Main") then
				local main = block.Main
				local gui = main:FindFirstChild("BillboardGui")
				if gui and gui:FindFirstChild("RemainingTime") then
					local remainingText = gui.RemainingTime
					if remainingText.Text and remainingText.Text ~= "" then
						createESP(plot, main, remainingText)
					end
				end
			end
		end
	end
end

function startUpdatingESP()
	if updating then return end
	updating = true


	RunService.RenderStepped:Connect(function()
		if not updating then return end
		hue = (hue + 0.002) % 1
		for _, data in pairs(espConnections) do
			if data.label then
				data.label.TextColor3 = Color3.fromHSV(hue, 1, 1)
			end
		end
	end)


	task.spawn(function()
		while updating do
			for _, data in pairs(espConnections) do
				if data.label and data.sourceText then
					local txt = data.sourceText.Text
					if txt == "60s" or txt == "" then
						data.label.Text = "Open"
					else
						data.label.Text = txt
					end
				end
			end
			task.wait(1)
		end
	end)
end


local HttpService = game:GetService("HttpService")
local utilitiesTab = pages and pages["Utilities"]

local container = Instance.new("Frame", utilitiesTab)
container.Size = UDim2.new(1, -20, 0, 200)
container.Position = UDim2.new(0, 10, 0, 10)
container.BackgroundColor3 = Color3.fromRGB(20, 20, 30)
container.BorderSizePixel = 2
container.BorderColor3 = Color3.fromRGB(100, 0, 200)
Instance.new("UICorner", container).CornerRadius = UDim.new(0, 12)

local scroll = Instance.new("ScrollingFrame", container)
scroll.Size = UDim2.new(1, -10, 1, -10)
scroll.Position = UDim2.new(0, 5, 0, 5)
scroll.CanvasSize = UDim2.new(0, 0, 0, 0)
scroll.ScrollBarThickness = 6
scroll.BackgroundTransparency = 1
scroll.BorderSizePixel = 0

local uiList = Instance.new("UIListLayout", scroll)
uiList.Padding = UDim.new(0, 6)
uiList.SortOrder = Enum.SortOrder.LayoutOrder

uiList:GetPropertyChangedSignal("AbsoluteContentSize"):Connect(function()
	scroll.CanvasSize = UDim2.new(0, 0, 0, uiList.AbsoluteContentSize.Y + 10)
end)

local function createUtilButton(text, color, callback, id)
	local btn = Instance.new("TextButton")
	btn.Size = UDim2.new(1, -10, 0, 40)
	btn.Text = text
	btn.BackgroundColor3 = color
	btn.TextColor3 = Color3.new(1, 1, 1)
	btn.Font = Enum.Font.GothamBold
	btn.TextSize = 16
	btn.BorderSizePixel = 0
	btn.TextXAlignment = Enum.TextXAlignment.Left
	Instance.new("UICorner", btn).CornerRadius = UDim.new(0, 8)

	local dropButton = Instance.new("TextButton", btn)
	dropButton.Size = UDim2.new(0, 24, 0, 24)
	dropButton.Position = UDim2.new(1, -28, 0.5, -12)
	dropButton.Text = "‚öôÔ∏è"
	dropButton.TextSize = 14
	dropButton.Font = Enum.Font.Gotham
	dropButton.TextColor3 = Color3.new(1,1,1)
	dropButton.BackgroundColor3 = Color3.fromRGB(60, 60, 90)
	Instance.new("UICorner", dropButton).CornerRadius = UDim.new(0, 6)


	local toggleContainer = Instance.new("Frame")
	toggleContainer.Size = UDim2.new(1, -10, 0, 24)
	toggleContainer.BackgroundTransparency = 1
	toggleContainer.ZIndex = 10
	toggleContainer.Visible = false
	toggleContainer.Parent = scroll 

	local toggle = Instance.new("TextButton", toggleContainer)
	toggle.Size = UDim2.new(1, 0, 1, 0)
	toggle.Text = (autoExecStates[id] and "‚úÖ AutoExecute" or "‚ùå AutoExecute")
	toggle.TextColor3 = autoExecStates[id] and Color3.fromRGB(150, 255, 150) or Color3.fromRGB(255, 100, 100)
	toggle.Font = Enum.Font.Gotham
	toggle.TextSize = 14
	toggle.BackgroundColor3 = Color3.fromRGB(40, 40, 60)
	toggle.BorderSizePixel = 0
	Instance.new("UICorner", toggle).CornerRadius = UDim.new(0, 6)

	dropButton.MouseButton1Click:Connect(function()
		toggleContainer.Visible = not toggleContainer.Visible
		toggleContainer.Position = UDim2.new(0, btn.Position.X.Offset, 0, btn.Position.Y.Offset + btn.Size.Y.Offset)
	end)

	toggle.MouseButton1Click:Connect(function()
		autoExecStates[id] = not autoExecStates[id]
		toggle.Text = (autoExecStates[id] and "‚úÖ AutoExecute" or "‚ùå AutoExecute")
		toggle.TextColor3 = autoExecStates[id] and Color3.fromRGB(150, 255, 150) or Color3.fromRGB(255, 100, 100)
		saveAutoExecStates()
	end)

	btn.MouseEnter:Connect(function()
		btn.BackgroundColor3 = color:lerp(Color3.new(1, 1, 1), 0.2)
	end)
	btn.MouseLeave:Connect(function()
		btn.BackgroundColor3 = color
	end)

	btn.MouseButton1Click:Connect(callback)
	btn.Parent = scroll
	if autoExecStates[id] then
		callback()
	end

end


createUtilButton("ü•© Rejoin Server", Color3.fromRGB(120, 80, 200), function()
	pcall(function()
		local placeId = game.PlaceId
		local jobId = game.JobId
		local player = game:GetService("Players").LocalPlayer
		local TeleportService = game:GetService("TeleportService")

		TeleportService:TeleportToPlaceInstance(placeId, jobId, player)
	end)
end, "rejoin")

createUtilButton("ü™Ç Infinite Jump", Color3.fromRGB(120, 80, 200), function()
    infJumpEnabled = not infJumpEnabled
end, "infjump")


createUtilButton("‚ö° Speedhack", Color3.fromRGB(120, 80, 200), function()
	isEnabled = not isEnabled

	if humanoid then
		if isEnabled then
			humanoid.WalkSpeed = speedValue
		else
			humanoid.WalkSpeed = defaultSpeed
		end
	end
end, "speed")

createUtilButton("üåê JobId Joiner", Color3.fromRGB(120, 80, 200), function()
    local TeleportService = game:GetService("TeleportService")
    local Players = game:GetService("Players")
    local LocalPlayer = Players.LocalPlayer
    local PLACE_ID = game.PlaceId 

    -- GUI
    local gui = Instance.new("ScreenGui", LocalPlayer:WaitForChild("PlayerGui"))
    gui.Name = "JobIdJoiner"
    gui.ResetOnSpawn = false

    -- Frame
    local frame = Instance.new("Frame", gui)
    frame.Size = UDim2.new(0, 300, 0, 150)
    frame.Position = UDim2.new(0.5, -150, 0.5, -75)
    frame.BackgroundColor3 = Color3.fromRGB(30, 30, 45)
    frame.BorderSizePixel = 0
    frame.Active = true
    frame.Draggable = true
    Instance.new("UICorner", frame).CornerRadius = UDim.new(0, 10)

    -- RGB –ø–æ–¥—Å–≤–µ—Ç–∫–∞ —Ä–∞–º–∫–∏
    local stroke = Instance.new("UIStroke", frame)
    stroke.Thickness = 2
    stroke.Transparency = 0
    stroke.Color = Color3.fromRGB(255, 0, 255)

    task.spawn(function()
        while stroke and stroke.Parent do
            local hue = tick() % 5 / 5
            stroke.Color = Color3.fromHSV(hue, 1, 1)
            task.wait(0.05)
        end
    end)

    -- –ó–∞–≥–æ–ª–æ–≤–æ–∫
    local title = Instance.new("TextLabel", frame)
    title.Size = UDim2.new(1, 0, 0, 30)
    title.Position = UDim2.new(0, 0, 0, 10)
    title.BackgroundTransparency = 1
    title.Text = "üåê Enter JobId"
    title.Font = Enum.Font.GothamBold
    title.TextSize = 20
    title.TextColor3 = Color3.new(1, 1, 1)

    -- TextBox
    local input = Instance.new("TextBox", frame)
    input.Size = UDim2.new(0.8, 0, 0, 36)
    input.Position = UDim2.new(0.1, 0, 0, 50)
    input.PlaceholderText = "Paste JobId here..."
    input.Text = ""
    input.Font = Enum.Font.Gotham
    input.TextSize = 18
    input.TextColor3 = Color3.new(1, 1, 1)
    input.BackgroundColor3 = Color3.fromRGB(50, 50, 70)
    Instance.new("UICorner", input).CornerRadius = UDim.new(0, 6)

    -- Label
    local result = Instance.new("TextLabel", frame)
    result.Size = UDim2.new(1, -20, 0, 20)
    result.Position = UDim2.new(0, 10, 0, 95)
    result.BackgroundTransparency = 1
    result.TextColor3 = Color3.fromRGB(255, 80, 80)
    result.Font = Enum.Font.Gotham
    result.TextSize = 14
    result.Text = ""

    -- Join Button
    local submit = Instance.new("TextButton", frame)
    submit.Size = UDim2.new(0.5, 0, 0, 34)
    submit.Position = UDim2.new(0.25, 0, 0, 115)
    submit.Text = "üöÄ Join"
    submit.Font = Enum.Font.GothamBold
    submit.TextSize = 16
    submit.TextColor3 = Color3.new(1, 1, 1)
    submit.BackgroundColor3 = Color3.fromRGB(120, 0, 200)
    Instance.new("UICorner", submit).CornerRadius = UDim.new(0, 8)

    submit.MouseButton1Click:Connect(function()
        local jobId = input.Text
        if jobId and jobId:match("%w+") then
            result.Text = "üîÑ Joining..."
            result.TextColor3 = Color3.fromRGB(80, 255, 80)
            task.wait(0.5)
            pcall(function()
                TeleportService:TeleportToPlaceInstance(PLACE_ID, jobId, LocalPlayer)
            end)
        else
            result.Text = "‚ùå Invalid JobId!"
            result.TextColor3 = Color3.fromRGB(255, 80, 80)
        end
    end)
end, "jobidjoin")




createUtilButton("üßç ESP", Color3.fromRGB(120, 80, 200), function()
	espAllEnabled = not espAllEnabled
	espInvisEnabled = not espInvisEnabled
	print("ESP All: " .. tostring(espAllEnabled))
end, "ESP")

createUtilButton("üß≠ Timer ESP", Color3.fromRGB(120, 80, 200), function()
	plotEspEnabled = not plotEspEnabled

	if plotEspEnabled then
		scanAndCreateESP()
		startUpdatingESP()
	else
		clearESP()
	end
end, "Timer")


local function manualTeleportCycle()
	statusLabel.Text = "üîÑ Manual ServerHop Started"

	local cachedServers = {}
	local currentIndex = 1

	if isfile(serverCacheFile) then
		local success, data = pcall(function()
			return HttpService:JSONDecode(readfile(serverCacheFile))
		end)
		if success and typeof(data) == "table" then
			cachedServers = data
		end
	end

	if isfile(serverIndexFile) then
		local success, data = pcall(function()
			return tonumber(readfile(serverIndexFile))
		end)
		if success and data then
			currentIndex = data
		end
	end

	while currentIndex <= #cachedServers do
		local server = cachedServers[currentIndex]
		currentIndex += 1

		pcall(function()
			writefile(serverIndexFile, tostring(currentIndex))
		end)

		if server and server.playing < server.maxPlayers then
			local id = tostring(server.id)
			local alreadyTried = table.find(AllIDs, id)

			if not alreadyTried then
				table.insert(AllIDs, id)
				pcall(function()
					writefile("NotSameServers.json", HttpService:JSONEncode(AllIDs))
					TeleportService:TeleportToPlaceInstance(PlaceID, id, Players.LocalPlayer)
				end)
			end
		end

		wait(0.3)
	end

	statusLabel.Text = "‚úÖ Manual ServerHop Done"
end


local manualTopButton = Instance.new("TextButton", pages["Main"])
manualTopButton.Size = UDim2.new(1, -20, 0, 36)
manualTopButton.Position = UDim2.new(0, 10, 1, -120)
manualTopButton.Text = "üíé Manual Tp"
manualTopButton.TextColor3 = Color3.new(1, 1, 1)
manualTopButton.Font = Enum.Font.GothamBold
manualTopButton.TextSize = 18
manualTopButton.BackgroundColor3 = Color3.fromRGB(55, 60, 90)
Instance.new("UICorner", manualTopButton).CornerRadius = UDim.new(0, 8)

manualTopButton.MouseButton1Click:Connect(manualTeleportCycle)


local webhookBox = Instance.new("TextBox", pages["Settings"])
webhookBox.Size = UDim2.new(1, -20, 0, 35)
webhookBox.Position = UDim2.new(0, 10, 0, 100)
webhookBox.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
webhookBox.TextColor3 = Color3.new(1, 1, 1)
webhookBox.Font = Enum.Font.Gotham
webhookBox.TextSize = 14
webhookBox.PlaceholderText = "Enter your Discord Webhook..."
webhookBox.Text = _G.webhookUrl
webhookBox.ClearTextOnFocus = false
Instance.new("UICorner", webhookBox)

local saveButton = Instance.new("TextButton", pages["Settings"])
saveButton.Size = UDim2.new(0.85, 0, 0, 32)
saveButton.Position = UDim2.new(0, 25, 0, 150)
saveButton.BackgroundColor3 = Color3.fromRGB(120, 80, 200)
saveButton.TextColor3 = Color3.new(1, 1, 1)
saveButton.Font = Enum.Font.GothamBold
saveButton.TextSize = 14
saveButton.Text = "üíæ Save Webhook"
Instance.new("UICorner", saveButton)






saveButton.MouseButton1Click:Connect(function()
	local input = webhookBox.Text
	
	if input ~= "" and input:match("^https://") then
		_G.webhookUrl = input
		saveWebhook(input)

		saveButton.Text = "‚úÖ Saved!"
		saveButton.BackgroundColor3 = Color3.fromRGB(0, 170, 0)
		
		task.wait(1.5)
		saveButton.Text = "üíæ Save Webhook"
		saveButton.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
	else
		saveButton.Text = "‚ùå Invalid URL"
		saveButton.BackgroundColor3 = Color3.fromRGB(170, 0, 0)
		
		task.wait(1.5)
		saveButton.Text = "üíæ Save Webhook"
		saveButton.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
	end
end)


local serverIdBox = Instance.new("TextBox", pages["Settings"])
serverIdBox.Size = UDim2.new(1, -20, 0, 35)
serverIdBox.Position = UDim2.new(0, 10, 0, 200)
serverIdBox.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
serverIdBox.TextColor3 = Color3.new(1, 1, 1)
serverIdBox.Font = Enum.Font.Gotham
serverIdBox.TextSize = 14
serverIdBox.Text = "" 
serverIdBox.PlaceholderText = "Enter Server ID..."
serverIdBox.ClearTextOnFocus = false
Instance.new("UICorner", serverIdBox)



local joinButton = Instance.new("TextButton", pages["Settings"])
joinButton.Size = UDim2.new(0.85, 0, 0, 32)
joinButton.Position = UDim2.new(0, 25, 0, 250)
joinButton.BackgroundColor3 = Color3.fromRGB(120, 80, 200)
joinButton.TextColor3 = Color3.new(1, 1, 1)
joinButton.Font = Enum.Font.GothamBold
joinButton.TextSize = 14
joinButton.Text = "üîó Join Server"
Instance.new("UICorner", joinButton)

local infoLabel = Instance.new("TextLabel", pages["Info"])
infoLabel.Size = UDim2.new(1, -10, 1, -10) -- –æ—Ç—Å—Ç—É–ø—ã
infoLabel.Position = UDim2.new(0, 5, 0, 5)
infoLabel.BackgroundTransparency = 1
infoLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
infoLabel.TextWrapped = true
infoLabel.TextXAlignment = Enum.TextXAlignment.Left
infoLabel.TextYAlignment = Enum.TextYAlignment.Top
infoLabel.Font = Enum.Font.SourceSans
infoLabel.TextSize = 18
infoLabel.Text = [[
üìú Changelog:

- –û–±–Ω–æ–≤–ª–µ–Ω Speedhack (‚ö° –∫–Ω–æ–ø–∫–∞ –∏ –Ω–∞ V)

- –î–æ–±–∞–≤–ª–µ–Ω Infinite Jump (ü™Ç –∫–Ω–æ–ø–∫–∞ –∏ C - –≤–∫–ª—é—á–∏—Ç—å –∏ –∑–∞–∂–∞—Ç—å –ø—Ä–æ–±–µ–ª)

- –ß—Ç–æ–±—ã —Ä–∞–±–æ—Ç–∞–ª —Å–ø–∏–¥—Ö–∞–∫ , –Ω—É–∂–µ–Ω –ø–ª–∞—â –Ω–µ–≤–µ–¥–∏–º–∫–∞
]]



joinButton.MouseButton1Click:Connect(function()
	local serverId = serverIdBox.Text
	if serverId ~= "" then
		warn("[Join Server] Connecting to server:", serverId)
		TeleportService:TeleportToPlaceInstance(game.PlaceId, serverId, player)
	else
		warn("[Join Server] Please enter a valid Server ID!")
	end
end)




if loadHopStatus() then
	spawn(function()
		wait(2) 
		if hasWantedPets() then
			statusLabel.Text = "‚úÖ Pets Found! AutoHop stopped"
			isRunning = false
			saveHopStatus(false)
		else
			statusLabel.Text = "üîÅ AutoHop: hopping..."
			teleportToNextServer()
		end
	end)
end
